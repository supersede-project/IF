/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'yosu' at '2/12/16 1:34 PM' with Gradle 2.6
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.6/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
	jcenter()
        mavenCentral()
	jcenter()
        mavenLocal()
		maven {
	            url "${artifactory_contextUrl}/libs-snapshot"
	            name = 'maven-supersede-snapshot'
		    credentials {
	                username = "${artifactory_user}"
	                password = "${artifactory_password}"
		    }
	        }
		maven {
	            url "${artifactory_contextUrl}/libs-release"
	            name = 'maven-supersede-release'
		    credentials {
	                username = "${artifactory_user}"
	                password = "${artifactory_password}"
		    }
	        }
    }
    configurations.maybeCreate("pitest")
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.2.RELEASE")
	//Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:latest.release"
        pitest 'fr.inria.stamp:descartes:0.2-SNAPSHOT'
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.1.11'
<<<<<<< HEAD
	classpath files(new File(gradle.gradleUserHomeDir, 'plugins/build-info-extractor-gradle-4.9.6-uber.jar'))
=======
	//classpath files(new File(gradle.gradleUserHomeDir, 'plugins/build-info-extractor-gradle-4.9.6-uber.jar'))
>>>>>>> fe2368c51bea68362cbc47b5d6785cc56463dce8
    }
}

// Plugins
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'maven-publish'
apply plugin: "info.solidsoft.pitest"
apply plugin: 'maven'

pitest {
  mutationEngine = "descartes"
}

allprojects {
    apply plugin: "com.jfrog.artifactory"
}

group = 'eu.supersede.if'
version = '0.4.0-SNAPSHOT'

jar {
    baseName = 'eu.supersede.if.api'
}

//Avoids to package an Spring Boot executable jar that cannot be used as dependency
bootRepackage.enabled = false

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    // jcenter()
    mavenCentral()
    add buildscript.repositories.getByName ("maven-supersede-snapshot")
    add buildscript.repositories.getByName ("maven-supersede-release")
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // Log4J
    compile 'log4j:log4j:1.2.17'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    compile 'org.apache.axis2:axis2:1.6.1'
    compile 'org.apache.axis2:axis2-transport-http:1.6.1'
    compile 'org.apache.axis2:axis2-transport-local:1.6.1'
    compile 'org.springframework.boot:spring-boot-starter-security:1.4.2.RELEASE'
    testCompile("org.springframework.boot:spring-boot-starter-test:1.4.2.RELEASE")
    testCompile('com.jayway.jsonpath:json-path:2.2.0')
    compile 'ca.juliusdavies:not-yet-commons-ssl:0.3.9' //Required for EasySSLProtocolSocketFactory class

    compile(group: 'org.wso2.carbon', name: 'org.wso2.carbon.um.ws.api.stub', version: '4.2.2')
    compile(group: 'org.wso2.carbon', name: 'org.wso2.carbon.tenant.mgt.stub', version: '4.2.0')
    compile(group: 'org.wso2.carbon', name: 'org.wso2.carbon.um.ws.api', version: '4.2.2')
    compile(group: 'org.wso2.carbon', name: 'org.wso2.carbon.user.api', version: '4.2.0')
    compile(group: 'org.wso2.carbon', name: 'org.wso2.carbon.user.core', version: '4.2.0')
    compile(group: 'org.wso2.carbon', name: 'org.wso2.carbon.utils', version: '4.2.0')
    compile(group: 'opensaml.wso2', name: 'opensaml2', version: '2.4.1.wso2v1')
    compile (group: 'eu.supersede.feedback_gathering', name: 'feedback_library', version: '0.0.1-SNAPSHOT')
    
//    compile group: 'xalan', name: 'xalan', version: '2.7.1'
//    compile group: 'org.apache.rampart', name: 'rampart', version: '1.6.2'
//    compile group: 'org.apache.rampart', name: 'rahas', version: '1.6.2'
    
//    testCompile 'org.apache.rampart:rahas:1.6.2'
//    testCompile 'org.apache.rampart:rampart-core:1.6.2'
    
    compile 'org.springframework:spring-core:4.3.4.RELEASE'
    
//    testCompile 'org.opensaml:opensaml'
//    testCompile 'org.opensaml:xmltooling'
//    testCompile 'org.opensaml:core'

    compile("org.springframework.boot:spring-boot-starter-web:1.4.2.RELEASE")
   
    //Kafka dependencies (WP2 Data Provider)
	compile group: 'org.apache.kafka', name: 'kafka-clients', version: '0.10.1.1'
	compile group: 'org.apache.kafka', name: 'kafka_2.10', version: '0.10.1.1'
	
	//JSON Library
	compile group: 'org.json', name: 'json', version: '20160212'
	
	//WSO2 Message Broker - PubSub library
	compile(group: 'org.wso2.andes.wso2', name: 'andes-client', version: '3.1.1')
	compile(group: 'org.apache.geronimo.specs.wso2', name: 'geronimo-jms_1.1_spec', version: '1.1.0.wso2v1')
	compile(group: 'org.wso2.carbon', name: 'org.wso2.carbon.logging', version: '4.4.1')
	compile(group: 'org.wso2.securevault', name: 'org.wso2.securevault', version: '1.0.0-wso2v2')

	//Google Guava
	compile 'com.google.guava:guava:21.0'
	
	//MockEJB
	testCompile("org.mockejb:mockejb:0.6-beta2")
}

configurations.all {
	//Avoids conflict: SL4J Multiple bindings were found on the class path 
	exclude group: "org.slf4j", module: "slf4j-log4j12"
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.2'
}

// Test execution JVM properties
tasks.withType(Test){
	systemProperty 'is.admin.user', System.getProperty ('is.admin.user', 'admin@atos.supersede.eu')
	systemProperty 'is.admin.passwd', System.getProperty ('is.admin.passwd', 'rtgWCyrc')
//	systemProperty 'supersede.if.properties', System.getProperty ('supersede.if.properties', 'if.properties')
	systemProperties System.properties
}

tasks.withType(JavaExec) {
    // Assign all Java system properties from
    // the command line to the JavaExec task.
    systemProperties System.properties
}

// Test execution filter
test {
	filter {
		includeTestsMatching "*MailProxyTest"
		includeTestsMatching "*FEDataStoreProxyTest"
//		includeTestsMatching "*IFTenantsManagerTest"
		includeTestsMatching "*IFAuthenticationManagerTest"
//		includeTestsMatching "*DecisionMakingSystemProxyTest"
	}
}


// Artifactory configuration to publish built jars
artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    String repo = version.endsWith('SNAPSHOT') ? 'libs-snapshot-local' : 'libs-release-local'
    publish {
        repository {
            repoKey = repo
	    username = "${artifactory_user}"
	    password = "${artifactory_password}"
            maven = true
        }
	defaults {
   	    publications ('mavenJava')
	}
    }
    resolve {
        repository {
            repoKey = 'libs-snapshot'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
    }
}

artifactoryPublish {
  dependsOn jar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

task writeNewPom {
    doLast {
        pom {
            project {
                inceptionYear '2008'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
            }
        }.writeTo("$buildDir/newpom.xml")
    }
}

