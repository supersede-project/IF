/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 11:22:08 GMT 2019
 */

package eu.supersede.integration.api.replan.controller.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.replan.controller.types.Constraint;

public class Constraint_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Constraint constraint0 = new Constraint();
      String string0 = constraint0.getVariable();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Constraint constraint0 = new Constraint();
      constraint0.setVariable("wd^n94]c");
      String string0 = constraint0.getVariable();
      assertEquals("wd^n94]c", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Constraint constraint0 = new Constraint();
      Double double0 = constraint0.getValue();
      constraint0.setValue(double0);
      assertNull(constraint0.getVariable());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Constraint constraint0 = new Constraint();
      String string0 = constraint0.getOperator();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Constraint constraint0 = new Constraint();
      constraint0.setOperator("");
      String string0 = constraint0.getOperator();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Constraint constraint0 = new Constraint();
      constraint0.operator = "xeGABxp";
      String string0 = constraint0.getOperator();
      assertEquals("xeGABxp", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Constraint constraint0 = new Constraint();
      Double double0 = new Double((-1.0));
      constraint0.setValue(double0);
      Double double1 = constraint0.getValue();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Constraint constraint0 = new Constraint();
      Double double0 = new Double(2056.0557989384);
      constraint0.value = double0;
      Double double1 = constraint0.getValue();
      assertEquals(2056.0557989384, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Constraint constraint0 = new Constraint();
      Double double0 = new Double(0.0);
      constraint0.setValue(double0);
      Double double1 = constraint0.getValue();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Constraint constraint0 = new Constraint();
      constraint0.setVariable("");
      String string0 = constraint0.getVariable();
      assertEquals("", string0);
  }
}
