/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 10:52:33 GMT 2019
 */

package eu.supersede.integration.api.feedback.repository.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.feedback.repository.types.CategoryType;
import java.sql.Timestamp;

public class CategoryType_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CategoryType categoryType0 = new CategoryType((-357L), "", "", "", (Timestamp) null, (Timestamp) null);
      categoryType0.setUpdatedAt((Timestamp) null);
      assertEquals((-357L), categoryType0.getId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CategoryType categoryType0 = new CategoryType((-357L), "", "", "", (Timestamp) null, (Timestamp) null);
      categoryType0.setText("");
      assertEquals((-357L), categoryType0.getId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp((-91L));
      CategoryType categoryType0 = new CategoryType((-91L), (String) null, (String) null, (String) null, timestamp0, timestamp0);
      categoryType0.setId((-91L));
      assertEquals((-91L), categoryType0.getId());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CategoryType categoryType0 = new CategoryType((-352L), "", "", "", (Timestamp) null, (Timestamp) null);
      categoryType0.getKey();
      assertEquals((-352L), categoryType0.getId());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp((-91L));
      CategoryType categoryType0 = new CategoryType((-91L), (String) null, (String) null, (String) null, timestamp0, timestamp0);
      categoryType0.getCreatedAt();
      assertEquals((-91L), categoryType0.getId());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp((-91L));
      CategoryType categoryType0 = new CategoryType((-91L), (String) null, (String) null, (String) null, timestamp0, timestamp0);
      categoryType0.getLanguage();
      assertEquals((-91L), categoryType0.getId());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp((-91L));
      CategoryType categoryType0 = new CategoryType((-91L), (String) null, (String) null, (String) null, timestamp0, timestamp0);
      categoryType0.getText();
      assertEquals((-91L), categoryType0.getId());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CategoryType categoryType0 = new CategoryType((-352L), "", "", "", (Timestamp) null, (Timestamp) null);
      categoryType0.setCreatedAt((Timestamp) null);
      assertEquals((-352L), categoryType0.getId());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp((-91L));
      CategoryType categoryType0 = new CategoryType((-91L), (String) null, (String) null, (String) null, timestamp0, timestamp0);
      categoryType0.getUpdatedAt();
      assertEquals((-91L), categoryType0.getId());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CategoryType categoryType0 = new CategoryType((-357L), "", "", "", (Timestamp) null, (Timestamp) null);
      long long0 = categoryType0.getId();
      assertEquals((-357L), long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CategoryType categoryType0 = new CategoryType((-357L), "P", "P", "P", (Timestamp) null, (Timestamp) null);
      categoryType0.setLanguage("P");
      assertEquals((-357L), categoryType0.getId());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp(0L);
      CategoryType categoryType0 = new CategoryType((-3452L), (String) null, "0s2.CcQf-$w!R#", (String) null, timestamp0, timestamp0);
      categoryType0.getCreatedAt();
      assertEquals((-3452L), categoryType0.getId());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CategoryType categoryType0 = new CategoryType(0L, "", "- ,+{%zD|-@{", "", (Timestamp) null, (Timestamp) null);
      categoryType0.getCreatedAt();
      assertEquals("- ,+{%zD|-@{", categoryType0.getLanguage());
      assertEquals("", categoryType0.getText());
      assertEquals("", categoryType0.getKey());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp(0L);
      CategoryType categoryType0 = new CategoryType(521L, "B$STJ&:1@WsWK>aN_Nq", "B$STJ&:1@WsWK>aN_Nq", "tG<m3]8", timestamp0, timestamp0);
      long long0 = categoryType0.getId();
      assertEquals("B$STJ&:1@WsWK>aN_Nq", categoryType0.getKey());
      assertEquals(521L, long0);
      assertEquals("B$STJ&:1@WsWK>aN_Nq", categoryType0.getLanguage());
      assertEquals("tG<m3]8", categoryType0.getText());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CategoryType categoryType0 = new CategoryType(0L, ",chK/", ",chK/", "ZvM5):6XS", (Timestamp) null, (Timestamp) null);
      categoryType0.getId();
      assertEquals("ZvM5):6XS", categoryType0.getText());
      assertEquals(",chK/", categoryType0.getLanguage());
      assertEquals(",chK/", categoryType0.getKey());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CategoryType categoryType0 = new CategoryType(0L, "eu.supersede.integration.api.feedback.repository.types.CategoryType", "\"2S255{U:fp.AWbsl_", "eu.supersede.integration.api.feedback.repository.types.CategoryType", (Timestamp) null, (Timestamp) null);
      String string0 = categoryType0.getKey();
      assertEquals("eu.supersede.integration.api.feedback.repository.types.CategoryType", string0);
      assertEquals("eu.supersede.integration.api.feedback.repository.types.CategoryType", categoryType0.getText());
      assertEquals("\"2S255{U:fp.AWbsl_", categoryType0.getLanguage());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CategoryType categoryType0 = new CategoryType((-1L), "", "", "", (Timestamp) null, (Timestamp) null);
      categoryType0.setKey((String) null);
      categoryType0.getKey();
      assertEquals((-1L), categoryType0.getId());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CategoryType categoryType0 = new CategoryType((-357L), "", "", "", (Timestamp) null, (Timestamp) null);
      categoryType0.getLanguage();
      assertEquals((-357L), categoryType0.getId());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp(0L);
      CategoryType categoryType0 = new CategoryType((-3452L), (String) null, "0s2.CcQf-$w!R#", (String) null, timestamp0, timestamp0);
      String string0 = categoryType0.getLanguage();
      assertNotNull(string0);
      assertEquals((-3452L), categoryType0.getId());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CategoryType categoryType0 = new CategoryType((-9223372036854775808L), "", "com.google.common.collect.DiscreteDomain$IntegerDomain", "", (Timestamp) null, (Timestamp) null);
      String string0 = categoryType0.getText();
      assertEquals("", categoryType0.getKey());
      assertEquals("com.google.common.collect.DiscreteDomain$IntegerDomain", categoryType0.getLanguage());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CategoryType categoryType0 = new CategoryType(0L, ",chK/", ",chK/", "ZvM5):6XS", (Timestamp) null, (Timestamp) null);
      String string0 = categoryType0.getText();
      assertEquals(",chK/", categoryType0.getKey());
      assertEquals("ZvM5):6XS", string0);
      assertEquals(",chK/", categoryType0.getLanguage());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp(0L);
      CategoryType categoryType0 = new CategoryType(521L, "B$STJ&:1@WsWK>aN_Nq", "B$STJ&:1@WsWK>aN_Nq", "tG<m3]8", timestamp0, timestamp0);
      categoryType0.getUpdatedAt();
      assertEquals(521L, categoryType0.getId());
      assertEquals("B$STJ&:1@WsWK>aN_Nq", categoryType0.getKey());
      assertEquals("B$STJ&:1@WsWK>aN_Nq", categoryType0.getLanguage());
      assertEquals("tG<m3]8", categoryType0.getText());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CategoryType categoryType0 = new CategoryType(0L, "eu.supersede.integration.api.feedback.repository.types.CategoryType", "\"2S255{U:fp.AWbsl_", "eu.supersede.integration.api.feedback.repository.types.CategoryType", (Timestamp) null, (Timestamp) null);
      categoryType0.getUpdatedAt();
      assertEquals("\"2S255{U:fp.AWbsl_", categoryType0.getLanguage());
      assertEquals("eu.supersede.integration.api.feedback.repository.types.CategoryType", categoryType0.getKey());
      assertEquals("eu.supersede.integration.api.feedback.repository.types.CategoryType", categoryType0.getText());
  }
}
