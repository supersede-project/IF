/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 10:32:37 GMT 2019
 */

package eu.supersede.integration.api.feedback.orchestrator.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.feedback.orchestrator.types.MonitorConfiguration;
import eu.supersede.integration.api.feedback.orchestrator.types.MonitorTool;
import eu.supersede.integration.api.feedback.orchestrator.types.MonitorType;
import eu.supersede.integration.api.monitoring.manager.types.Method;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;

public class MonitorTool_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      monitorTool0.setName("");
      String string0 = monitorTool0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      List<MonitorConfiguration> list0 = monitorTool0.getMonitorConfigurations();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      String string0 = monitorTool0.getMonitorName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      monitorTool0.setMonitorName((String) null);
      assertNull(monitorTool0.getName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      LinkedList<MonitorConfiguration> linkedList0 = new LinkedList<MonitorConfiguration>();
      monitorTool0.setMonitorConfigurations(linkedList0);
      assertNull(monitorTool0.getName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      long long0 = monitorTool0.getId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      String string0 = monitorTool0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      MonitorType monitorType0 = monitorTool0.getMonitorType();
      assertNull(monitorType0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      monitorTool0.setId((-1285L));
      long long0 = monitorTool0.getId();
      assertEquals((-1285L), long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      monitorTool0.setId(2634L);
      long long0 = monitorTool0.getId();
      assertEquals(2634L, long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Vector<MonitorConfiguration> vector0 = new Vector<MonitorConfiguration>();
      MonitorType monitorType0 = new MonitorType();
      MonitorTool monitorTool0 = new MonitorTool("YjQi(<", vector0, monitorType0, "YjQi(<");
      Method method0 = Method.POST;
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration(monitorTool0, 0L, "YjQi(<", "YjQi(<", (String) null, (String) null, "", "j#Hhgmg2lucm", "False positive probability (%s) must be < 1.0", "", "YjQi(<", "YjQi(<", method0);
      vector0.add(monitorConfiguration0);
      List<MonitorConfiguration> list0 = monitorTool0.getMonitorConfigurations();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Vector<MonitorConfiguration> vector0 = new Vector<MonitorConfiguration>();
      MonitorType monitorType0 = new MonitorType();
      MonitorTool monitorTool0 = new MonitorTool("X", vector0, monitorType0, "");
      monitorTool0.getMonitorConfigurations();
      assertEquals("", monitorTool0.getMonitorName());
      assertEquals("X", monitorTool0.getName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Vector<MonitorConfiguration> vector0 = new Vector<MonitorConfiguration>();
      MonitorType monitorType0 = new MonitorType();
      MonitorTool monitorTool0 = new MonitorTool("X", vector0, monitorType0, "");
      String string0 = monitorTool0.getMonitorName();
      assertEquals("X", monitorTool0.getName());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MonitorType monitorType0 = new MonitorType();
      MonitorTool monitorTool0 = new MonitorTool("u~$(m5J\"(UU#_6Kr }", (List<MonitorConfiguration>) null, monitorType0, "u~$(m5J\"(UU#_6Kr }");
      String string0 = monitorTool0.getMonitorName();
      assertEquals("u~$(m5J\"(UU#_6Kr }", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      MonitorType monitorType0 = new MonitorType();
      monitorType0.setId((-1219L));
      monitorTool0.setMonitorType(monitorType0);
      MonitorType monitorType1 = monitorTool0.getMonitorType();
      assertNull(monitorType1.getName());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MonitorType monitorType0 = new MonitorType();
      MonitorTool monitorTool0 = new MonitorTool("u~$(m5J\"(UU#_6Kr }", (List<MonitorConfiguration>) null, monitorType0, "u~$(m5J\"(UU#_6Kr }");
      monitorType0.setId(2030L);
      MonitorType monitorType1 = monitorTool0.getMonitorType();
      assertNull(monitorType1.getName());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Vector<MonitorConfiguration> vector0 = new Vector<MonitorConfiguration>();
      MonitorType monitorType0 = new MonitorType();
      MonitorTool monitorTool0 = new MonitorTool("X", vector0, monitorType0, "");
      monitorTool0.getMonitorType();
      assertEquals("", monitorTool0.getMonitorName());
      assertEquals("X", monitorTool0.getName());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Vector<MonitorConfiguration> vector0 = new Vector<MonitorConfiguration>();
      MonitorType monitorType0 = new MonitorType();
      MonitorTool monitorTool0 = new MonitorTool("X", vector0, monitorType0, "");
      String string0 = monitorTool0.getName();
      assertEquals("", monitorTool0.getMonitorName());
      assertEquals("X", string0);
  }
}
