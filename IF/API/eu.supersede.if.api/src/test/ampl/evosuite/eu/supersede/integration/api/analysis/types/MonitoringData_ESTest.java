/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 10:08:57 GMT 2019
 */

package eu.supersede.integration.api.analysis.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.analysis.types.MonitoringData;

public class MonitoringData_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MonitoringData monitoringData0 = new MonitoringData((String) null, (String) null, (String) null, "", "");
      monitoringData0.setAuthor("}w&c2sWzX+(Si%e@");
      String string0 = monitoringData0.getAuthor();
      assertEquals("}w&c2sWzX+(Si%e@", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MonitoringData monitoringData0 = new MonitoringData("", "", "", "", "");
      monitoringData0.setMessage("");
      assertEquals("", monitoringData0.getMessage());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MonitoringData monitoringData0 = new MonitoringData("", "", "", "", "eu.supersede.integration.api.analysis.types.MonitoringData");
      String string0 = monitoringData0.getTimeStamp();
      assertEquals("", monitoringData0.getAuthor());
      assertEquals("", monitoringData0.getId());
      assertEquals("", string0);
      assertEquals("", monitoringData0.getMessage());
      assertEquals("eu.supersede.integration.api.analysis.types.MonitoringData", monitoringData0.getLink());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MonitoringData monitoringData0 = new MonitoringData((String) null, (String) null, (String) null, "", "");
      String string0 = monitoringData0.getAuthor();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MonitoringData monitoringData0 = new MonitoringData((String) null, (String) null, (String) null, "", "h'15!5@c\"1)?$9r");
      String string0 = monitoringData0.getMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MonitoringData monitoringData0 = new MonitoringData("", "", "", "", "");
      monitoringData0.setId("");
      assertEquals("", monitoringData0.getMessage());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MonitoringData monitoringData0 = new MonitoringData((String) null, "s{)(", "F/t&Ro;:{Is:|y$yH(", "", "F/t&Ro;:{Is:|y$yH(");
      String string0 = monitoringData0.getLink();
      assertEquals("F/t&Ro;:{Is:|y$yH(", monitoringData0.getMessage());
      assertEquals("", monitoringData0.getAuthor());
      assertEquals("s{)(", monitoringData0.getTimeStamp());
      assertEquals("F/t&Ro;:{Is:|y$yH(", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MonitoringData monitoringData0 = new MonitoringData("", "", "", (String) null, "gr+F!-");
      assertEquals("", monitoringData0.getTimeStamp());
      
      monitoringData0.setTimeStamp("");
      assertEquals("gr+F!-", monitoringData0.getLink());
      assertEquals("", monitoringData0.getId());
      assertEquals("", monitoringData0.getMessage());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MonitoringData monitoringData0 = new MonitoringData("", ">", ">", "", "fe+c_&KW#BV|^wil");
      String string0 = monitoringData0.getId();
      assertEquals("", string0);
      assertEquals("fe+c_&KW#BV|^wil", monitoringData0.getLink());
      assertEquals("", monitoringData0.getAuthor());
      assertEquals(">", monitoringData0.getMessage());
      assertEquals(">", monitoringData0.getTimeStamp());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MonitoringData monitoringData0 = new MonitoringData("", (String) null, "", "", "ye98?elifiEg");
      assertEquals("", monitoringData0.getAuthor());
      
      monitoringData0.setAuthor((String) null);
      monitoringData0.getAuthor();
      assertEquals("", monitoringData0.getMessage());
      assertEquals("", monitoringData0.getId());
      assertEquals("ye98?elifiEg", monitoringData0.getLink());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MonitoringData monitoringData0 = new MonitoringData("(u", "", "", "(u", "eu.supersede.integration.api.analysis.types.MonitoringData");
      String string0 = monitoringData0.getId();
      assertEquals("(u", string0);
      assertEquals("", monitoringData0.getMessage());
      assertEquals("eu.supersede.integration.api.analysis.types.MonitoringData", monitoringData0.getLink());
      assertEquals("(u", monitoringData0.getAuthor());
      assertEquals("", monitoringData0.getTimeStamp());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MonitoringData monitoringData0 = new MonitoringData((String) null, (String) null, "", "N$\t`", "eu.supersede.integration.api.analysis.types.MonitoringData");
      String string0 = monitoringData0.getId();
      assertNull(string0);
      assertEquals("eu.supersede.integration.api.analysis.types.MonitoringData", monitoringData0.getLink());
      assertEquals("", monitoringData0.getMessage());
      assertEquals("N$\t`", monitoringData0.getAuthor());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MonitoringData monitoringData0 = new MonitoringData("", (String) null, "", "", "ye98?elifiEg");
      assertEquals("ye98?elifiEg", monitoringData0.getLink());
      
      monitoringData0.setLink("");
      monitoringData0.getLink();
      assertEquals("", monitoringData0.getMessage());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MonitoringData monitoringData0 = new MonitoringData("", (String) null, "", "", "ye98?elifiEg");
      assertEquals("ye98?elifiEg", monitoringData0.getLink());
      
      monitoringData0.setLink((String) null);
      monitoringData0.getLink();
      assertEquals("", monitoringData0.getId());
      assertEquals("", monitoringData0.getAuthor());
      assertEquals("", monitoringData0.getMessage());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MonitoringData monitoringData0 = new MonitoringData("(u", "", "", "(u", "eu.supersede.integration.api.analysis.types.MonitoringData");
      String string0 = monitoringData0.getMessage();
      assertEquals("", monitoringData0.getTimeStamp());
      assertEquals("eu.supersede.integration.api.analysis.types.MonitoringData", monitoringData0.getLink());
      assertEquals("", string0);
      assertEquals("(u", monitoringData0.getId());
      assertEquals("(u", monitoringData0.getAuthor());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MonitoringData monitoringData0 = new MonitoringData("~", "~", "eu.supersede.integration.api.analysis.types.MonitoringData", "eu.supersede.integration.api.analysis.types.MonitoringData", "");
      String string0 = monitoringData0.getMessage();
      assertEquals("", monitoringData0.getLink());
      assertEquals("~", monitoringData0.getTimeStamp());
      assertEquals("eu.supersede.integration.api.analysis.types.MonitoringData", string0);
      assertEquals("~", monitoringData0.getId());
      assertEquals("eu.supersede.integration.api.analysis.types.MonitoringData", monitoringData0.getAuthor());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MonitoringData monitoringData0 = new MonitoringData(";+C/n_", ";+C/n_", "J4D|(0#f^U~6nJD]L+", "J4D|(0#f^U~6nJD]L+", (String) null);
      String string0 = monitoringData0.getTimeStamp();
      assertNotNull(string0);
      assertEquals("J4D|(0#f^U~6nJD]L+", monitoringData0.getMessage());
      assertEquals(";+C/n_", string0);
      assertEquals("J4D|(0#f^U~6nJD]L+", monitoringData0.getAuthor());
      assertEquals(";+C/n_", monitoringData0.getId());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MonitoringData monitoringData0 = new MonitoringData((String) null, (String) null, (String) null, "", "h'15!5@c\"1)?$9r");
      String string0 = monitoringData0.getTimeStamp();
      assertNull(string0);
  }
}
