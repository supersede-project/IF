/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 10:49:59 GMT 2019
 */

package eu.supersede.integration.api.feedback.repository.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.feedback.orchestrator.types.ConfigurationMechanism;
import eu.supersede.integration.api.feedback.orchestrator.types.Mechanism;
import eu.supersede.integration.api.feedback.orchestrator.types.MechanismType;
import eu.supersede.integration.api.feedback.orchestrator.types.Parameter;
import eu.supersede.integration.api.feedback.repository.types.AttachmentFeedback;
import eu.supersede.integration.api.feedback.repository.types.AudioFeedback;
import eu.supersede.integration.api.feedback.repository.types.CategoryFeedback;
import eu.supersede.integration.api.feedback.repository.types.ContextInformation;
import eu.supersede.integration.api.feedback.repository.types.Feedback;
import eu.supersede.integration.api.feedback.repository.types.RatingFeedback;
import eu.supersede.integration.api.feedback.repository.types.ScreenshotFeedback;
import eu.supersede.integration.api.feedback.repository.types.Status;
import eu.supersede.integration.api.feedback.repository.types.TextFeedback;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.mock.java.util.MockDate;

public class AudioFeedback_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Feedback feedback0 = new Feedback();
      AudioFeedback audioFeedback0 = new AudioFeedback("eu.supersede.integration.api.feedback.repository.types.AudioFeedback", 0, "eu.supersede.integration.api.feedback.repository.types.AudioFeedback", "eu.supersede.integration.api.feedback.repository.types.AudioFeedback", feedback0, 0, 0);
      audioFeedback0.setPath("eu.supersede.integration.api.feedback.repository.types.AudioFeedback");
      assertEquals(0, audioFeedback0.getSize());
      assertEquals(0, audioFeedback0.getDuration());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback(3292L, 0);
      audioFeedback0.getPath();
      assertEquals(0, audioFeedback0.getDuration());
      assertEquals(3292L, audioFeedback0.getMechanismId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback(3292L, 0);
      audioFeedback0.getFileExtension();
      assertEquals(0, audioFeedback0.getDuration());
      assertEquals(3292L, audioFeedback0.getMechanismId());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback();
      int int0 = audioFeedback0.getDuration();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback(0L, (-3060));
      audioFeedback0.getId();
      assertEquals((-3060), audioFeedback0.getDuration());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback();
      Mechanism mechanism0 = audioFeedback0.getMechanism();
      assertNull(mechanism0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback();
      audioFeedback0.setDuration(3398);
      assertEquals(3398, audioFeedback0.getDuration());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback();
      String string0 = audioFeedback0.toString();
      assertEquals("AudioFeedback[id=0]", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback(3292L, 0);
      int int0 = audioFeedback0.getSize();
      assertEquals(0, audioFeedback0.getDuration());
      assertEquals(0, int0);
      assertEquals(3292L, audioFeedback0.getMechanismId());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback();
      String string0 = audioFeedback0.getPart();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback();
      long long0 = audioFeedback0.getMechanismId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback();
      audioFeedback0.setMechanismId(2134L);
      assertEquals(2134L, audioFeedback0.getMechanismId());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback(0L, (-1808));
      int int0 = audioFeedback0.getDuration();
      assertEquals((-1808), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Feedback feedback0 = new Feedback();
      AudioFeedback audioFeedback0 = new AudioFeedback("T3^R@2y$88az6d\\jK", 1073741823, "T3^R@2y$88az6d\\jK", "T3^R@2y$88az6d\\jK", feedback0, 1073741823, 1073741823);
      int int0 = audioFeedback0.getDuration();
      assertEquals(1073741823L, audioFeedback0.getMechanismId());
      assertEquals(1073741823, int0);
      assertEquals(1073741823, audioFeedback0.getSize());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Feedback feedback0 = new Feedback();
      AudioFeedback audioFeedback0 = new AudioFeedback("", 0, "", "", feedback0, (-1L), 0);
      audioFeedback0.getFileExtension();
      assertEquals(0, audioFeedback0.getDuration());
      assertEquals((-1L), audioFeedback0.getMechanismId());
      assertEquals(0, audioFeedback0.getSize());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback((-1519L), 0);
      audioFeedback0.setFileExtension("X-E");
      audioFeedback0.getFileExtension();
      assertEquals((-1519L), audioFeedback0.getMechanismId());
      assertEquals(0, audioFeedback0.getDuration());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback(2147483647L, 1);
      audioFeedback0.setId((-1L));
      long long0 = audioFeedback0.getId();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback(2147483647L, 56320);
      audioFeedback0.id = (long) 545;
      long long0 = audioFeedback0.getId();
      assertEquals(545L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback();
      Mechanism mechanism0 = new Mechanism();
      mechanism0.setId((-2147483648L));
      audioFeedback0.setMechanism(mechanism0);
      Mechanism mechanism1 = audioFeedback0.getMechanism();
      assertEquals((-2147483648L), mechanism1.getId());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback();
      Mechanism mechanism0 = new Mechanism();
      mechanism0.setId(3925L);
      audioFeedback0.setMechanism(mechanism0);
      Mechanism mechanism1 = audioFeedback0.getMechanism();
      assertEquals(3925L, mechanism1.getId());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback();
      Mechanism mechanism0 = new Mechanism();
      mechanism0.setOrder((-167));
      audioFeedback0.setMechanism(mechanism0);
      Mechanism mechanism1 = audioFeedback0.getMechanism();
      assertEquals((-167), mechanism1.getOrder());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback((-1777L), 255);
      MechanismType mechanismType0 = MechanismType.ATTACHMENT_TYPE;
      MockDate mockDate0 = new MockDate(255, 255, 255);
      Stack<Parameter> stack0 = new Stack<Parameter>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, mockDate0, mockDate0, (List<ConfigurationMechanism>) null, stack0);
      mechanism0.setOrder(255);
      audioFeedback0.setMechanism(mechanism0);
      audioFeedback0.getMechanism();
      assertEquals((-1777L), audioFeedback0.getMechanismId());
      assertEquals(255, audioFeedback0.getDuration());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Feedback feedback0 = new Feedback();
      AudioFeedback audioFeedback0 = new AudioFeedback("eu.supersede.integration.api.feedback.repository.types.AudioFeedback", 0, "eu.supersede.integration.api.feedback.repository.types.AudioFeedback", "eu.supersede.integration.api.feedback.repository.types.AudioFeedback", feedback0, 0, 0);
      Mechanism mechanism0 = new Mechanism();
      mechanism0.setActive(true);
      audioFeedback0.setMechanism(mechanism0);
      audioFeedback0.getMechanism();
      assertEquals(0, audioFeedback0.getSize());
      assertEquals(0, audioFeedback0.getDuration());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Feedback feedback0 = new Feedback();
      AudioFeedback audioFeedback0 = new AudioFeedback("", 0, "", "", feedback0, (-1L), 0);
      long long0 = audioFeedback0.getMechanismId();
      assertEquals((-1L), long0);
      assertEquals(0, audioFeedback0.getDuration());
      assertEquals(0, audioFeedback0.getSize());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0);
      ContextInformation contextInformation0 = new ContextInformation();
      Vector<AttachmentFeedback> vector0 = new Vector<AttachmentFeedback>();
      ArrayList<CategoryFeedback> arrayList0 = new ArrayList<CategoryFeedback>();
      Stack<RatingFeedback> stack0 = new Stack<RatingFeedback>();
      LinkedList<ScreenshotFeedback> linkedList0 = new LinkedList<ScreenshotFeedback>();
      Stack<TextFeedback> stack1 = new Stack<TextFeedback>();
      Stack<Status> stack2 = new Stack<Status>();
      Feedback feedback0 = new Feedback("AudioFeedback[id=%d]", "%Ghc|kH5aF65p2_MQ", mockDate0, mockDate0, 0, 0, "AudioFeedback[id=%d]", contextInformation0, vector0, (List<AudioFeedback>) null, arrayList0, stack0, linkedList0, stack1, stack2);
      AudioFeedback audioFeedback0 = new AudioFeedback("AudioFeedback[id=%d]", 0, "AudioFeedback[id=%d]", "w ! H\"wR7J9C2Uo", feedback0, 1242L, 237);
      long long0 = audioFeedback0.getMechanismId();
      assertEquals(0, audioFeedback0.getSize());
      assertEquals("w ! H\"wR7J9C2Uo", audioFeedback0.getFileExtension());
      assertEquals("AudioFeedback[id=%d]", audioFeedback0.getPath());
      assertEquals("AudioFeedback[id=%d]", audioFeedback0.getPart());
      assertEquals(1242L, long0);
      assertEquals(237, audioFeedback0.getDuration());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback(2147483647L, 56320);
      audioFeedback0.setPart("");
      audioFeedback0.getPart();
      assertEquals(56320, audioFeedback0.getDuration());
      assertEquals(2147483647L, audioFeedback0.getMechanismId());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Feedback feedback0 = new Feedback("cyU", "&nYfgz%?fm[N", 9223372036854775807L, (-340L), "");
      AudioFeedback audioFeedback0 = new AudioFeedback("cyU", (-240), "cyU", "cyU", feedback0, 9223372036854775807L, (-240));
      audioFeedback0.getPart();
      assertEquals((-240), audioFeedback0.getDuration());
      assertEquals(9223372036854775807L, audioFeedback0.getMechanismId());
      assertEquals((-240), audioFeedback0.getSize());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback("", (-2956), "[xKp/)gxr2", (String) null, (Feedback) null, 0, 8199);
      String string0 = audioFeedback0.getPath();
      assertEquals(8199, audioFeedback0.getDuration());
      assertNotNull(string0);
      assertEquals("[xKp/)gxr2", audioFeedback0.getPart());
      assertEquals("", string0);
      assertEquals((-2956), audioFeedback0.getSize());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Feedback feedback0 = new Feedback("P##2|Q6;+XSN", "P##2|Q6;+XSN", 0L, 0, "P##2|Q6;+XSN");
      AudioFeedback audioFeedback0 = new AudioFeedback("dg(m?rPeH", 0, "W)n?6vMz=3}Y", "", feedback0, 0, 0);
      String string0 = audioFeedback0.getPath();
      assertEquals("dg(m?rPeH", string0);
      assertEquals("W)n?6vMz=3}Y", audioFeedback0.getPart());
      assertEquals(0, audioFeedback0.getSize());
      assertEquals("", audioFeedback0.getFileExtension());
      assertEquals(0, audioFeedback0.getDuration());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback();
      audioFeedback0.setSize((-2133));
      int int0 = audioFeedback0.getSize();
      assertEquals((-2133), int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AudioFeedback audioFeedback0 = new AudioFeedback(2147483647L, 1);
      audioFeedback0.setSize(1);
      int int0 = audioFeedback0.getSize();
      assertEquals(1, int0);
  }
}
