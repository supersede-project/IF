/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 11:11:37 GMT 2019
 */

package eu.supersede.integration.api.monitoring.manager.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.monitoring.manager.types.DiskMonitorConfiguration;
import eu.supersede.integration.api.monitoring.manager.types.Instruction;
import java.util.List;
import java.util.Vector;

public class DiskMonitorConfiguration_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DiskMonitorConfiguration diskMonitorConfiguration0 = new DiskMonitorConfiguration();
      String string0 = diskMonitorConfiguration0.getHost();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DiskMonitorConfiguration diskMonitorConfiguration0 = new DiskMonitorConfiguration();
      String string0 = diskMonitorConfiguration0.getUser();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DiskMonitorConfiguration diskMonitorConfiguration0 = new DiskMonitorConfiguration();
      List<Instruction> list0 = diskMonitorConfiguration0.getInstructions();
      List<Instruction> list1 = diskMonitorConfiguration0.getInstructions();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DiskMonitorConfiguration diskMonitorConfiguration0 = new DiskMonitorConfiguration();
      diskMonitorConfiguration0.setHost("");
      String string0 = diskMonitorConfiguration0.getHost();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DiskMonitorConfiguration diskMonitorConfiguration0 = new DiskMonitorConfiguration();
      diskMonitorConfiguration0.setHost("2U}TsB;i~Ec[}&'b`");
      String string0 = diskMonitorConfiguration0.getHost();
      assertEquals("2U}TsB;i~Ec[}&'b`", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DiskMonitorConfiguration diskMonitorConfiguration0 = new DiskMonitorConfiguration();
      Vector<Instruction> vector0 = new Vector<Instruction>();
      vector0.add((Instruction) null);
      diskMonitorConfiguration0.setInstructions(vector0);
      List<Instruction> list0 = diskMonitorConfiguration0.getInstructions();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DiskMonitorConfiguration diskMonitorConfiguration0 = new DiskMonitorConfiguration();
      diskMonitorConfiguration0.setUser("");
      String string0 = diskMonitorConfiguration0.getUser();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DiskMonitorConfiguration diskMonitorConfiguration0 = new DiskMonitorConfiguration();
      diskMonitorConfiguration0.user = "eu.supersede.integration.api.monitoring.manager.types.DiskMonitorConfiguration";
      String string0 = diskMonitorConfiguration0.getUser();
      assertEquals("eu.supersede.integration.api.monitoring.manager.types.DiskMonitorConfiguration", string0);
  }
}
