/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 10:35:03 GMT 2019
 */

package eu.supersede.integration.api.feedback.orchestrator.types;

import org.junit.Test;
import static org.junit.Assert.*;
import java.sql.Timestamp;

public class OrchestratorItem_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      eu.supersede.integration.api.monitoring.orchestrator.types.MonitorConfiguration monitorConfiguration0 = new eu.supersede.integration.api.monitoring.orchestrator.types.MonitorConfiguration();
      boolean boolean0 = monitorConfiguration0.isCurrentVersion();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      eu.supersede.integration.api.monitoring.orchestrator.types.MonitorConfiguration monitorConfiguration0 = new eu.supersede.integration.api.monitoring.orchestrator.types.MonitorConfiguration();
      monitorConfiguration0.setCurrentVersion(true);
      boolean boolean0 = monitorConfiguration0.isCurrentVersion();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      eu.supersede.integration.api.monitoring.orchestrator.types.MonitorConfiguration monitorConfiguration0 = new eu.supersede.integration.api.monitoring.orchestrator.types.MonitorConfiguration();
      Timestamp timestamp0 = new Timestamp((-3763L));
      monitorConfiguration0.setCreatedAt(timestamp0);
      Timestamp timestamp1 = monitorConfiguration0.getCreatedAt();
      assertSame(timestamp1, timestamp0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      eu.supersede.integration.api.monitoring.orchestrator.types.MonitorConfiguration monitorConfiguration0 = new eu.supersede.integration.api.monitoring.orchestrator.types.MonitorConfiguration();
      Timestamp timestamp0 = monitorConfiguration0.getCreatedAt();
      assertNull(timestamp0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      eu.supersede.integration.api.monitoring.orchestrator.types.MonitorConfiguration monitorConfiguration0 = new eu.supersede.integration.api.monitoring.orchestrator.types.MonitorConfiguration();
      Timestamp timestamp0 = new Timestamp((-3763L));
      timestamp0.setNanos(0);
      monitorConfiguration0.setCreatedAt(timestamp0);
      Timestamp timestamp1 = monitorConfiguration0.getCreatedAt();
      assertEquals(0, timestamp1.getNanos());
  }
}
