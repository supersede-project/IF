/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 10:58:57 GMT 2019
 */

package eu.supersede.integration.api.feedback.repository.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.feedback.orchestrator.types.ConfigurationMechanism;
import eu.supersede.integration.api.feedback.orchestrator.types.Mechanism;
import eu.supersede.integration.api.feedback.orchestrator.types.MechanismType;
import eu.supersede.integration.api.feedback.orchestrator.types.Parameter;
import eu.supersede.integration.api.feedback.repository.types.TextFeedback;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;

public class TextFeedback_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TextFeedback textFeedback0 = new TextFeedback();
      Mechanism mechanism0 = new Mechanism();
      textFeedback0.setMechanism(mechanism0);
      mechanism0.setId(180L);
      Mechanism mechanism1 = textFeedback0.getMechanism();
      assertSame(mechanism1, mechanism0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TextFeedback textFeedback0 = new TextFeedback((String) null, (-781L));
      MechanismType mechanismType0 = MechanismType.SCREENSHOT_TYPE;
      ArrayList<ConfigurationMechanism> arrayList0 = new ArrayList<ConfigurationMechanism>();
      Vector<Parameter> vector0 = new Vector<Parameter>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, (Date) null, (Date) null, arrayList0, vector0);
      mechanism0.setId((-526L));
      textFeedback0.setMechanism(mechanism0);
      textFeedback0.getMechanism();
      assertEquals((-781L), textFeedback0.getMechanismId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TextFeedback textFeedback0 = new TextFeedback();
      long long0 = textFeedback0.getId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TextFeedback textFeedback0 = new TextFeedback();
      Mechanism mechanism0 = textFeedback0.getMechanism();
      assertNull(mechanism0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TextFeedback textFeedback0 = new TextFeedback();
      long long0 = textFeedback0.getMechanismId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TextFeedback textFeedback0 = new TextFeedback();
      String string0 = textFeedback0.toString();
      assertEquals("TextFeedback[id=0, text='null', mechanismId='0']", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TextFeedback textFeedback0 = new TextFeedback();
      String string0 = textFeedback0.getText();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TextFeedback textFeedback0 = new TextFeedback(">B", (-1622L));
      textFeedback0.setId((-1622L));
      long long0 = textFeedback0.getId();
      assertEquals((-1622L), long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TextFeedback textFeedback0 = new TextFeedback();
      textFeedback0.setId(2015L);
      long long0 = textFeedback0.getId();
      assertEquals(2015L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TextFeedback textFeedback0 = new TextFeedback();
      Mechanism mechanism0 = new Mechanism();
      mechanism0.setOrder((-1617));
      textFeedback0.setMechanism(mechanism0);
      Mechanism mechanism1 = textFeedback0.getMechanism();
      assertSame(mechanism1, mechanism0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      mechanism0.setOrder(77);
      TextFeedback textFeedback0 = new TextFeedback("BloomFilters must have equal funnels (%s != %s)", (-1587L));
      textFeedback0.setMechanism(mechanism0);
      textFeedback0.getMechanism();
      assertEquals((-1587L), textFeedback0.getMechanismId());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      TextFeedback textFeedback0 = new TextFeedback("BloomFilters must have equal funnels (%s != %s)", (-1587L));
      mechanism0.setActive(true);
      textFeedback0.setMechanism(mechanism0);
      textFeedback0.getMechanism();
      assertEquals((-1587L), textFeedback0.getMechanismId());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TextFeedback textFeedback0 = new TextFeedback();
      textFeedback0.setMechanismId((-2555L));
      long long0 = textFeedback0.getMechanismId();
      assertEquals((-2555L), long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TextFeedback textFeedback0 = new TextFeedback("com.google.common.base.Predicates$IsEqualToPredicate", 3877L);
      long long0 = textFeedback0.getMechanismId();
      assertEquals(3877L, long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TextFeedback textFeedback0 = new TextFeedback();
      textFeedback0.setText("");
      String string0 = textFeedback0.getText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TextFeedback textFeedback0 = new TextFeedback("BloomFilters must have equal funnels (%s != %s)", (-1587L));
      textFeedback0.getText();
      assertEquals((-1587L), textFeedback0.getMechanismId());
  }
}
