/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 10:17:42 GMT 2019
 */

package eu.supersede.integration.api.dm.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.dm.types.Alert;
import eu.supersede.integration.api.dm.types.Condition;
import eu.supersede.integration.api.dm.types.RequestClassification;
import eu.supersede.integration.api.dm.types.UserRequest;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;

public class Alert_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Alert alert0 = new Alert();
      alert0.setApplicationId(".class)");
      assertNull(alert0.getTenant());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Alert alert0 = new Alert();
      String string0 = alert0.getTenant();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Alert alert0 = new Alert();
      String string0 = alert0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Alert alert0 = new Alert();
      List<Condition> list0 = alert0.getConditions();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Alert alert0 = new Alert();
      long long0 = alert0.getTimestamp();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Alert alert0 = new Alert();
      List<UserRequest> list0 = alert0.getRequests();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Alert alert0 = new Alert();
      alert0.setTenant("");
      assertEquals("", alert0.getTenant());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Alert alert0 = new Alert();
      ArrayList<UserRequest> arrayList0 = new ArrayList<UserRequest>();
      alert0.setRequests(arrayList0);
      assertNull(alert0.getId());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Alert alert0 = new Alert();
      alert0.setId("Functions.toStringFunction()");
      assertEquals("Functions.toStringFunction()", alert0.getId());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Alert alert0 = new Alert();
      String string0 = alert0.getApplicationId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Alert alert0 = new Alert();
      alert0.applicationId = "";
      String string0 = alert0.getApplicationId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Alert alert0 = new Alert();
      alert0.applicationId = "5JK-F\"MrS*}";
      String string0 = alert0.getApplicationId();
      assertEquals("5JK-F\"MrS*}", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayList<Condition> arrayList0 = new ArrayList<Condition>();
      LinkedList<UserRequest> linkedList0 = new LinkedList<UserRequest>();
      Alert alert0 = new Alert("*kGf,]zWqY", "", 9223372036854775807L, "", arrayList0, linkedList0);
      Condition condition0 = new Condition();
      arrayList0.add(condition0);
      List<Condition> list0 = alert0.getConditions();
      assertEquals("", alert0.getTenant());
      assertTrue(list0.contains(condition0));
      assertNotNull(list0);
      assertEquals("", alert0.getApplicationId());
      assertEquals(9223372036854775807L, alert0.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Vector<Condition> vector0 = new Vector<Condition>();
      LinkedList<UserRequest> linkedList0 = new LinkedList<UserRequest>();
      Alert alert0 = new Alert("com.google.common.base.Equivalence$EquivalentToPredicate", "k2fndHH-Np,?=\"$", 1L, "eu.supersede.integration.api.dm.types.Alert", vector0, linkedList0);
      List<Condition> list0 = alert0.getConditions();
      assertNotNull(list0);
      assertEquals("k2fndHH-Np,?=\"$", alert0.getApplicationId());
      assertEquals(1L, alert0.getTimestamp());
      assertEquals("eu.supersede.integration.api.dm.types.Alert", alert0.getTenant());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<Condition> linkedList0 = new LinkedList<Condition>();
      Alert alert0 = new Alert("", "", (-1150L), "T{bqB93dV9}", linkedList0, (List<UserRequest>) null);
      String string0 = alert0.getId();
      assertEquals("T{bqB93dV9}", alert0.getTenant());
      assertEquals("", string0);
      assertEquals((-1150L), alert0.getTimestamp());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArrayList<Condition> arrayList0 = new ArrayList<Condition>();
      ArrayList<UserRequest> arrayList1 = new ArrayList<UserRequest>();
      RequestClassification requestClassification0 = RequestClassification.BugFixRequest;
      String[] stringArray0 = new String[5];
      UserRequest userRequest0 = new UserRequest("7\"e", requestClassification0, (-3067.272062), "", 0, 0, 0, stringArray0, stringArray0);
      arrayList1.add(userRequest0);
      Alert alert0 = new Alert("sfQ%U&7]>-Y3", "Functions.toStringFunction()", 0L, "sfQ%U&7]>-Y3", arrayList0, arrayList1);
      List<UserRequest> list0 = alert0.getRequests();
      assertEquals("Functions.toStringFunction()", alert0.getApplicationId());
      assertEquals("sfQ%U&7]>-Y3", alert0.getTenant());
      assertNotNull(list0);
      assertTrue(list0.contains(userRequest0));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Alert alert0 = new Alert();
      ArrayList<UserRequest> arrayList0 = new ArrayList<UserRequest>();
      alert0.requests = (List<UserRequest>) arrayList0;
      List<UserRequest> list0 = alert0.getRequests();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Alert alert0 = new Alert();
      alert0.tenant = "";
      String string0 = alert0.getTenant();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Stack<Condition> stack0 = new Stack<Condition>();
      Alert alert0 = new Alert((String) null, "com.google.common.cache.CacheStats", (-874L), "com.google.common.cache.CacheStats", stack0, (List<UserRequest>) null);
      String string0 = alert0.getTenant();
      assertEquals((-874L), alert0.getTimestamp());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Alert alert0 = new Alert();
      alert0.timestamp = (-738L);
      long long0 = alert0.getTimestamp();
      assertEquals((-738L), long0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Alert alert0 = new Alert();
      alert0.setTimestamp(1L);
      long long0 = alert0.getTimestamp();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Alert alert0 = new Alert();
      ArrayList<Condition> arrayList0 = new ArrayList<Condition>();
      alert0.setConditions(arrayList0);
      assertEquals(0L, alert0.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ArrayList<Condition> arrayList0 = new ArrayList<Condition>();
      Stack<UserRequest> stack0 = new Stack<UserRequest>();
      Alert alert0 = new Alert("+X9z'C2jIhl[z", "+X9z'C2jIhl[z", 0L, "7]Pa", arrayList0, stack0);
      assertEquals("+X9z'C2jIhl[z", alert0.getId());
      
      alert0.id = "7]Pa";
      String string0 = alert0.getId();
      assertEquals("7]Pa", string0);
  }
}
