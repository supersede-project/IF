/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 10:15:20 GMT 2019
 */

package eu.supersede.integration.api.datastore.fe.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.datastore.fe.types.Notification;
import eu.supersede.integration.api.datastore.fe.types.Profile;
import eu.supersede.integration.api.datastore.fe.types.User;
import java.util.ArrayList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;

public class User_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getLocale();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      User user0 = new User();
      List<Notification> list0 = user0.getNotifications();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getFirst_name();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      User user0 = new User();
      user0.setEmail("");
      String string0 = user0.getEmail();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      User user0 = new User();
      int int0 = user0.getUser_id();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      User user0 = new User();
      List<Profile> list0 = user0.getProfiles();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getLast_name();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      User user0 = new User();
      user0.setFirst_name("");
      String string0 = user0.getFirst_name();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      User user0 = new User();
      user0.setEmail("#(CK=kh3T,0");
      String string0 = user0.getEmail();
      assertEquals("#(CK=kh3T,0", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      User user0 = new User();
      user0.setFirst_name("WS1}ws8)s%Alz4p]{/");
      String string0 = user0.getFirst_name();
      assertEquals("WS1}ws8)s%Alz4p]{/", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      User user0 = new User();
      user0.last_name = "";
      String string0 = user0.getLast_name();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      User user0 = new User();
      user0.last_name = "QzJ^W<?";
      String string0 = user0.getLast_name();
      assertEquals("QzJ^W<?", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      User user0 = new User();
      user0.setLocale("");
      String string0 = user0.getLocale();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      User user0 = new User();
      user0.locale = "Mp=TY";
      String string0 = user0.getLocale();
      assertEquals("Mp=TY", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      User user0 = new User();
      Vector<Notification> vector0 = new Vector<Notification>();
      Notification notification0 = new Notification();
      vector0.add(notification0);
      user0.setNotifications(vector0);
      List<Notification> list0 = user0.getNotifications();
      assertTrue(list0.contains(notification0));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      User user0 = new User();
      ArrayList<Notification> arrayList0 = new ArrayList<Notification>();
      user0.setNotifications(arrayList0);
      List<Notification> list0 = user0.getNotifications();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      User user0 = new User();
      ArrayList<Profile> arrayList0 = new ArrayList<Profile>();
      Profile profile0 = new Profile();
      arrayList0.add(profile0);
      user0.setProfiles(arrayList0);
      List<Profile> list0 = user0.getProfiles();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      User user0 = new User();
      Stack<Profile> stack0 = new Stack<Profile>();
      user0.profiles = (List<Profile>) stack0;
      List<Profile> list0 = user0.getProfiles();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      User user0 = new User();
      user0.user_id = (-2310);
      int int0 = user0.getUser_id();
      assertEquals((-2310), int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      User user0 = new User();
      user0.setUser_id(1490);
      int int0 = user0.getUser_id();
      assertEquals(1490, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      User user0 = new User();
      user0.username = "";
      String string0 = user0.getUsername();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      User user0 = new User();
      user0.setUsername("WS1}ws8)s%Alz4p]{/");
      String string0 = user0.getUsername();
      assertEquals("WS1}ws8)s%Alz4p]{/", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      User user0 = new User();
      user0.setLast_name("");
      assertNull(user0.getEmail());
  }
}
