/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 11:18:19 GMT 2019
 */

package eu.supersede.integration.api.monitoring.orchestrator.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.monitoring.manager.types.Method;
import eu.supersede.integration.api.monitoring.orchestrator.types.MonitorConfiguration;

public class MonitorConfiguration_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      String string0 = monitorConfiguration0.toString();
      assertEquals("MonitorConfiguration[id=null, monitorToolId=null, configSender=null, timeStamp=null, timeSlot=null, kafkaEndpoint=null, kafkaTopic=null, state=null, keywordExpression=null, packageName=null, appId=null, url=null, method=null, monitorManagerId=null]", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      Integer integer0 = new Integer(0);
      monitorConfiguration0.setMonitorToolId(integer0);
      Integer integer1 = monitorConfiguration0.getMonitorToolId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      Method method0 = monitorConfiguration0.getMethod();
      monitorConfiguration0.setMethod(method0);
      assertNull(monitorConfiguration0.getMethod());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      monitorConfiguration0.setPackageName("");
      String string0 = monitorConfiguration0.getPackageName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      Integer integer0 = Integer.valueOf(0);
      monitorConfiguration0.setId(integer0);
      Integer integer1 = monitorConfiguration0.getId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      monitorConfiguration0.setTimeStamp("");
      String string0 = monitorConfiguration0.getTimeStamp();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      monitorConfiguration0.setState("");
      String string0 = monitorConfiguration0.getState();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      String string0 = monitorConfiguration0.getKafkaEndpoint();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      String string0 = monitorConfiguration0.getKafkaTopic();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      Integer integer0 = monitorConfiguration0.getMonitorManagerId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      String string0 = monitorConfiguration0.getKeywordExpression();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      String string0 = monitorConfiguration0.getUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      String string0 = monitorConfiguration0.getState();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      String string0 = monitorConfiguration0.getTimeSlot();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      Integer integer0 = monitorConfiguration0.getMonitorToolId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      String string0 = monitorConfiguration0.getTimeStamp();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      String string0 = monitorConfiguration0.getAppId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      String string0 = monitorConfiguration0.getConfigSender();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      String string0 = monitorConfiguration0.getPackageName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      Integer integer0 = monitorConfiguration0.getId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      monitorConfiguration0.setAppId("");
      String string0 = monitorConfiguration0.getAppId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      monitorConfiguration0.setAppId("[x<5xtn89N)\"$>");
      String string0 = monitorConfiguration0.getAppId();
      assertEquals("[x<5xtn89N)\"$>", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      monitorConfiguration0.setConfigSender("");
      String string0 = monitorConfiguration0.getConfigSender();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      monitorConfiguration0.setConfigSender("com.google.common.collect.Ordering");
      String string0 = monitorConfiguration0.getConfigSender();
      assertEquals("com.google.common.collect.Ordering", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      Integer integer0 = new Integer((-227));
      monitorConfiguration0.setId(integer0);
      Integer integer1 = monitorConfiguration0.getId();
      assertEquals((-227), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      Integer integer0 = new Integer(1776);
      monitorConfiguration0.setId(integer0);
      Integer integer1 = monitorConfiguration0.getId();
      assertEquals(1776, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      monitorConfiguration0.setKafkaEndpoint("");
      String string0 = monitorConfiguration0.getKafkaEndpoint();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      monitorConfiguration0.setKafkaEndpoint("com.google.common.collect.Ordering");
      String string0 = monitorConfiguration0.getKafkaEndpoint();
      assertEquals("com.google.common.collect.Ordering", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      monitorConfiguration0.setKafkaTopic("");
      String string0 = monitorConfiguration0.getKafkaTopic();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      monitorConfiguration0.setKafkaTopic("e`xYg[a!jqq|E");
      String string0 = monitorConfiguration0.getKafkaTopic();
      assertEquals("e`xYg[a!jqq|E", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      monitorConfiguration0.setKeywordExpression("");
      String string0 = monitorConfiguration0.getKeywordExpression();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      monitorConfiguration0.setKeywordExpression("r<W+.b=C4F ");
      String string0 = monitorConfiguration0.getKeywordExpression();
      assertEquals("r<W+.b=C4F ", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      Method method0 = Method.GET;
      monitorConfiguration0.setMethod(method0);
      Method method1 = monitorConfiguration0.getMethod();
      assertSame(method1, method0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      Integer integer0 = new Integer((-4308));
      monitorConfiguration0.setMonitorManagerId(integer0);
      Integer integer1 = monitorConfiguration0.getMonitorManagerId();
      assertEquals((-4308), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      Integer integer0 = new Integer(16);
      monitorConfiguration0.setMonitorManagerId(integer0);
      Integer integer1 = monitorConfiguration0.getMonitorManagerId();
      assertEquals(16, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      Integer integer0 = Integer.valueOf(0);
      monitorConfiguration0.setMonitorManagerId(integer0);
      Integer integer1 = monitorConfiguration0.getMonitorManagerId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      Integer integer0 = new Integer((-727));
      monitorConfiguration0.setMonitorToolId(integer0);
      Integer integer1 = monitorConfiguration0.getMonitorToolId();
      assertEquals((-727), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      Integer integer0 = new Integer(1707);
      monitorConfiguration0.setMonitorToolId(integer0);
      Integer integer1 = monitorConfiguration0.getMonitorToolId();
      assertEquals(1707, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      monitorConfiguration0.setPackageName(", state=");
      String string0 = monitorConfiguration0.getPackageName();
      assertEquals(", state=", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      monitorConfiguration0.setState("Y<7JGQjPo6Ymq0OR");
      String string0 = monitorConfiguration0.getState();
      assertEquals("Y<7JGQjPo6Ymq0OR", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      monitorConfiguration0.setTimeSlot("");
      String string0 = monitorConfiguration0.getTimeSlot();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      monitorConfiguration0.setTimeSlot("'h:ay],a#zq^ ~>");
      String string0 = monitorConfiguration0.getTimeSlot();
      assertEquals("'h:ay],a#zq^ ~>", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      monitorConfiguration0.setTimeStamp("mw^S9io?h8IFheY+");
      String string0 = monitorConfiguration0.getTimeStamp();
      assertEquals("mw^S9io?h8IFheY+", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      monitorConfiguration0.setUrl("");
      String string0 = monitorConfiguration0.getUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      monitorConfiguration0.setUrl("\t~1'WCY_AMqmd");
      String string0 = monitorConfiguration0.getUrl();
      assertEquals("\t~1'WCY_AMqmd", string0);
  }
}
