/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 11:49:48 GMT 2019
 */

package eu.supersede.integration.api.security.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.security.types.AuthorizationToken;

public class AuthorizationToken_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AuthorizationToken authorizationToken0 = new AuthorizationToken();
      String string0 = authorizationToken0.getRefreshToken();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AuthorizationToken authorizationToken0 = new AuthorizationToken();
      String string0 = authorizationToken0.getAccessToken();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AuthorizationToken authorizationToken0 = new AuthorizationToken();
      String string0 = authorizationToken0.getTokenType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AuthorizationToken authorizationToken0 = new AuthorizationToken();
      int int0 = authorizationToken0.getExpiresIn();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AuthorizationToken authorizationToken0 = new AuthorizationToken();
      authorizationToken0.setAccessToken("SED9tK tU");
      assertNull(authorizationToken0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AuthorizationToken authorizationToken0 = new AuthorizationToken();
      authorizationToken0.accessToken = "q72ZUcSL~QR";
      authorizationToken0.accessToken = "";
      String string0 = authorizationToken0.getAccessToken();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AuthorizationToken authorizationToken0 = new AuthorizationToken();
      authorizationToken0.accessToken = "q72ZUcSL~QR";
      String string0 = authorizationToken0.getAccessToken();
      assertEquals("q72ZUcSL~QR", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AuthorizationToken authorizationToken0 = new AuthorizationToken();
      authorizationToken0.setExpiresIn((-1467));
      int int0 = authorizationToken0.getExpiresIn();
      assertEquals((-1467), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AuthorizationToken authorizationToken0 = new AuthorizationToken();
      authorizationToken0.setExpiresIn(1);
      int int0 = authorizationToken0.getExpiresIn();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AuthorizationToken authorizationToken0 = new AuthorizationToken();
      authorizationToken0.setRefreshToken("");
      String string0 = authorizationToken0.getRefreshToken();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AuthorizationToken authorizationToken0 = new AuthorizationToken();
      authorizationToken0.setRefreshToken("q;b ");
      String string0 = authorizationToken0.getRefreshToken();
      assertEquals("q;b ", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AuthorizationToken authorizationToken0 = new AuthorizationToken();
      authorizationToken0.setTokenType("");
      String string0 = authorizationToken0.getTokenType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AuthorizationToken authorizationToken0 = new AuthorizationToken();
      authorizationToken0.setTokenType("m8E[*@Ok");
      String string0 = authorizationToken0.getTokenType();
      assertEquals("m8E[*@Ok", string0);
  }
}
