/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 11:01:38 GMT 2019
 */

package eu.supersede.integration.api.mail.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.mail.types.Email;
import java.util.List;

public class Email_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Email email0 = new Email();
      List<String> list0 = email0.getBccRecipients();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Email email0 = new Email();
      String string0 = email0.getSubject();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Email email0 = new Email();
      String string0 = email0.getTo();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Email email0 = new Email();
      email0.setBody("");
      assertEquals("", email0.getCc());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Email email0 = new Email();
      List<String> list0 = email0.getCcRecipients();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Email email0 = new Email();
      String string0 = email0.getCc();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Email email0 = new Email();
      email0.addToRecipient("");
      email0.getTo();
      assertEquals(",", email0.getTo());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Email email0 = new Email();
      email0.addBccRecipient("Y=XC0P%m5OQ+7C$");
      email0.getBcc();
      assertEquals(",Y=XC0P%m5OQ+7C$", email0.getBcc());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Email email0 = new Email();
      List<String> list0 = email0.getToRecipients();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Email email0 = new Email();
      String string0 = email0.getBody();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Email email0 = new Email();
      String string0 = email0.getBcc();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Email email0 = new Email();
      email0.bcc = null;
      // Undeclared exception!
      try { 
        email0.getBccRecipients();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Email email0 = new Email();
      email0.cc = null;
      // Undeclared exception!
      try { 
        email0.getCcRecipients();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Email email0 = new Email();
      email0.to = null;
      // Undeclared exception!
      try { 
        email0.getToRecipients();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Email email0 = new Email();
      email0.bcc = null;
      String string0 = email0.getBcc();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Email email0 = new Email();
      email0.body = "P";
      String string0 = email0.getBody();
      assertEquals("P", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Email email0 = new Email();
      email0.body = ".";
      email0.body = null;
      String string0 = email0.getBody();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Email email0 = new Email();
      email0.addCcRecipient("' 6|eZ");
      email0.getCc();
      assertEquals(",' 6|eZ", email0.getCc());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Email email0 = new Email();
      email0.cc = null;
      String string0 = email0.getCc();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Email email0 = new Email();
      email0.setSubject("' 6|eZ");
      String string0 = email0.getSubject();
      assertEquals("' 6|eZ", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Email email0 = new Email();
      email0.setSubject((String) null);
      String string0 = email0.getSubject();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Email email0 = new Email();
      email0.to = null;
      String string0 = email0.getTo();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Email email0 = new Email();
      email0.to = "";
      email0.addToRecipient("");
      assertEquals(",", email0.getTo());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Email email0 = new Email();
      email0.addCcRecipient("' 6|eZ");
      email0.addCcRecipient("");
      assertEquals(",' 6|eZ,", email0.getCc());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Email email0 = new Email();
      email0.bcc = "";
      email0.addBccRecipient("Y=XC0P%m5OQ+7C$");
      assertEquals(",Y=XC0P%m5OQ+7C$", email0.getBcc());
  }
}
