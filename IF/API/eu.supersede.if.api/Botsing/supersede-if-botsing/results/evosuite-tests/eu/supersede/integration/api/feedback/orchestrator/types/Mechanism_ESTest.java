/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 10:29:45 GMT 2019
 */

package eu.supersede.integration.api.feedback.orchestrator.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.feedback.orchestrator.types.Configuration;
import eu.supersede.integration.api.feedback.orchestrator.types.ConfigurationMechanism;
import eu.supersede.integration.api.feedback.orchestrator.types.GeneralConfiguration;
import eu.supersede.integration.api.feedback.orchestrator.types.Mechanism;
import eu.supersede.integration.api.feedback.orchestrator.types.MechanismType;
import eu.supersede.integration.api.feedback.orchestrator.types.Parameter;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;

public class Mechanism_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      MockDate mockDate0 = new MockDate();
      mechanism0.setCreatedAt(mockDate0);
      assertEquals(0, mechanism0.getOrder());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Stack<Parameter> stack0 = new Stack<Parameter>();
      MechanismType mechanismType0 = MechanismType.RATING_TYPE;
      Mechanism mechanism0 = new Mechanism(mechanismType0, (Date) null, (Date) null, linkedList0, stack0);
      mechanism0.setActive(true);
      boolean boolean0 = mechanism0.isActive();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      mechanism0.getType();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Stack<Parameter> stack0 = new Stack<Parameter>();
      MechanismType mechanismType0 = MechanismType.INFO_TYPE;
      Mechanism mechanism0 = new Mechanism(mechanismType0, (List<ConfigurationMechanism>) null, stack0);
      List<ConfigurationMechanism> list0 = mechanism0.getConfigurationMechanisms();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MechanismType mechanismType0 = MechanismType.INFO_TYPE;
      Vector<ConfigurationMechanism> vector0 = new Vector<ConfigurationMechanism>();
      Vector<Parameter> vector1 = new Vector<Parameter>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, vector0, vector1);
      long long0 = mechanism0.getId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      Date date0 = mechanism0.getUpdatedAt();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      Date date0 = mechanism0.getCreatedAt();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      mechanism0.onUpdate();
      assertEquals(0, mechanism0.getOrder());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Stack<Parameter> stack0 = new Stack<Parameter>();
      MechanismType mechanismType0 = MechanismType.RATING_TYPE;
      Mechanism mechanism0 = new Mechanism(mechanismType0, (Date) null, (Date) null, linkedList0, stack0);
      boolean boolean0 = mechanism0.isActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      mechanism0.setParameters((List<Parameter>) null);
      assertEquals(0L, mechanism0.getId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Stack<Parameter> stack0 = new Stack<Parameter>();
      MechanismType mechanismType0 = MechanismType.RATING_TYPE;
      Mechanism mechanism0 = new Mechanism(mechanismType0, (Date) null, (Date) null, linkedList0, stack0);
      int int0 = mechanism0.getOrder();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      MechanismType mechanismType0 = MechanismType.SCREENSHOT_TYPE;
      mechanism0.setType(mechanismType0);
      assertEquals(MechanismType.SCREENSHOT_TYPE, mechanism0.getType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      mechanism0.onCreate();
      assertNull(mechanism0.getType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MechanismType mechanismType0 = MechanismType.INFO_TYPE;
      Vector<ConfigurationMechanism> vector0 = new Vector<ConfigurationMechanism>();
      Vector<Parameter> vector1 = new Vector<Parameter>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, vector0, vector1);
      MockDate mockDate0 = new MockDate(114, 114, 114);
      mechanism0.setUpdatedAt(mockDate0);
      assertEquals(0L, mechanism0.getId());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      Stack<ConfigurationMechanism> stack0 = new Stack<ConfigurationMechanism>();
      mechanism0.setConfigurationMechanisms(stack0);
      assertNull(mechanism0.getType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      String string0 = mechanism0.toString();
      assertEquals("Mechanism[id=0, type='null', parameters=[]]", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      List<Parameter> list0 = mechanism0.parametersByLanguage("Mechanism[id=0, type='null', parameters=[]]", "Mechanism[id=0, type='null', parameters=[]]");
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Stack<Parameter> stack0 = new Stack<Parameter>();
      MechanismType mechanismType0 = MechanismType.RATING_TYPE;
      Mechanism mechanism0 = new Mechanism(mechanismType0, (Date) null, (Date) null, linkedList0, stack0);
      Parameter parameter0 = new Parameter(3965L, "pgU=KsOeWE", (String) null, "7!9TcV|PR=08", (Parameter) null, stack0);
      stack0.add(parameter0);
      // Undeclared exception!
      try { 
        mechanism0.parametersByLanguage("", "");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Stack<Parameter> stack0 = new Stack<Parameter>();
      MechanismType mechanismType0 = MechanismType.AUDIO_TYPE;
      Parameter parameter0 = new Parameter();
      stack0.add(parameter0);
      Mechanism mechanism0 = new Mechanism(mechanismType0, linkedList0, stack0);
      // Undeclared exception!
      try { 
        mechanism0.parametersByLanguage("", "]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Stack<Parameter> stack0 = new Stack<Parameter>();
      MechanismType mechanismType0 = MechanismType.RATING_TYPE;
      Stack<Parameter> stack1 = new Stack<Parameter>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, (Date) null, (Date) null, linkedList0, stack1);
      Parameter parameter0 = new Parameter(3965L, "pgU=KsOeWE", (String) null, "7!9TcV|PR=08", (Parameter) null, stack0);
      stack1.add(parameter0);
      List<Parameter> list0 = mechanism0.parametersByLanguage("", "");
      assertFalse(list0.contains(parameter0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Stack<Parameter> stack0 = new Stack<Parameter>();
      MechanismType mechanismType0 = MechanismType.INFO_TYPE;
      Stack<Parameter> stack1 = new Stack<Parameter>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, (Date) null, (Date) null, linkedList0, stack1);
      Parameter parameter0 = new Parameter(3965L, "pgU=KsOeWE", "pgU=KsOeWE", "pgU=KsOeWE", (Parameter) null, stack0);
      stack1.add(parameter0);
      parameter0.setLanguage("C~w%tMw");
      stack1.add(parameter0);
      List<Parameter> list0 = mechanism0.parametersByLanguage("#@ibyD_bS3gR?p?`", "C~w%tMw");
      assertTrue(list0.contains(parameter0));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Stack<Parameter> stack0 = new Stack<Parameter>();
      MechanismType mechanismType0 = MechanismType.INFO_TYPE;
      Stack<Parameter> stack1 = new Stack<Parameter>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, (Date) null, (Date) null, linkedList0, stack1);
      Parameter parameter0 = new Parameter(3965L, "pgU=KsOeWE", "pgU=KsOeWE", "pgU=KsOeWE", (Parameter) null, stack0);
      stack1.add(parameter0);
      parameter0.setLanguage("C~w%tMw");
      stack1.add(parameter0);
      List<Parameter> list0 = mechanism0.parametersByLanguage("C~w%tMw", "C~w%tMw");
      assertTrue(list0.contains(parameter0));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      mechanism0.filterByLanguage((String) null, (String) null);
      assertNull(mechanism0.getType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Stack<Parameter> stack0 = new Stack<Parameter>();
      MechanismType mechanismType0 = MechanismType.ATTACHMENT_TYPE;
      Parameter parameter0 = new Parameter();
      stack0.add(parameter0);
      Mechanism mechanism0 = new Mechanism(mechanismType0, linkedList0, stack0);
      // Undeclared exception!
      try { 
        mechanism0.filterByLanguage("Cmo02|", "Cmo02|");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Stack<Parameter> stack0 = new Stack<Parameter>();
      MechanismType mechanismType0 = MechanismType.INFO_TYPE;
      Mechanism mechanism0 = new Mechanism(mechanismType0, (Date) null, (Date) null, linkedList0, stack0);
      List<Parameter> list0 = mechanism0.getParameters();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Stack<Parameter> stack0 = new Stack<Parameter>();
      MechanismType mechanismType0 = MechanismType.ATTACHMENT_TYPE;
      Mechanism mechanism0 = new Mechanism(mechanismType0, (Date) null, (Date) null, linkedList0, stack0);
      Parameter parameter0 = new Parameter();
      parameter0.setLanguage("]");
      stack0.add(parameter0);
      Parameter parameter1 = new Parameter("", "rFl~=wxsKabL", (Date) null, (Date) null, "]", parameter0, stack0);
      stack0.add(parameter1);
      // Undeclared exception!
      mechanism0.parametersByLanguage("", "B`X6TX4fC(UTB");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MechanismType mechanismType0 = MechanismType.TEXT_TYPE;
      Stack<ConfigurationMechanism> stack0 = new Stack<ConfigurationMechanism>();
      Stack<Parameter> stack1 = new Stack<Parameter>();
      stack1.add((Parameter) null);
      Mechanism mechanism0 = new Mechanism(mechanismType0, stack0, stack1);
      // Undeclared exception!
      try { 
        mechanism0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MechanismType mechanismType0 = MechanismType.TEXT_TYPE;
      Stack<ConfigurationMechanism> stack0 = new Stack<ConfigurationMechanism>();
      Stack<Parameter> stack1 = new Stack<Parameter>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, stack0, stack1);
      Configuration configuration0 = new Configuration();
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism(configuration0, mechanism0, true, 18);
      stack0.add(configurationMechanism0);
      List<ConfigurationMechanism> list0 = mechanism0.getConfigurationMechanisms();
      assertTrue(list0.contains(configurationMechanism0));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MechanismType mechanismType0 = MechanismType.TEXT_TYPE;
      Stack<ConfigurationMechanism> stack0 = new Stack<ConfigurationMechanism>();
      Vector<Parameter> vector0 = new Vector<Parameter>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, stack0, vector0);
      List<ConfigurationMechanism> list0 = mechanism0.getConfigurationMechanisms();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MechanismType mechanismType0 = MechanismType.TEXT_TYPE;
      MockDate mockDate0 = new MockDate((-642), 0, 0, 0, 4719, 242);
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Vector<Parameter> vector0 = new Vector<Parameter>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, mockDate0, mockDate0, linkedList0, vector0);
      Date date0 = mechanism0.getCreatedAt();
      assertSame(mockDate0, date0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MechanismType mechanismType0 = MechanismType.RATING_TYPE;
      Instant instant0 = MockInstant.ofEpochSecond(0L);
      Date date0 = Date.from(instant0);
      Mechanism mechanism0 = new Mechanism(mechanismType0, date0, date0, (List<ConfigurationMechanism>) null, (List<Parameter>) null);
      mechanism0.setId((-1120L));
      long long0 = mechanism0.getId();
      assertEquals((-1120L), long0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      mechanism0.setId(127L);
      long long0 = mechanism0.getId();
      assertEquals(127L, long0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      mechanism0.setOrder((-2335));
      int int0 = mechanism0.getOrder();
      assertEquals((-2335), int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MechanismType mechanismType0 = MechanismType.RATING_TYPE;
      Stack<ConfigurationMechanism> stack0 = new Stack<ConfigurationMechanism>();
      ArrayList<ConfigurationMechanism> arrayList0 = new ArrayList<ConfigurationMechanism>(stack0);
      ArrayList<Parameter> arrayList1 = new ArrayList<Parameter>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, arrayList0, arrayList1);
      mechanism0.setOrder(1464);
      int int0 = mechanism0.getOrder();
      assertEquals(1464, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MechanismType mechanismType0 = MechanismType.RATING_TYPE;
      Stack<ConfigurationMechanism> stack0 = new Stack<ConfigurationMechanism>();
      ArrayList<ConfigurationMechanism> arrayList0 = new ArrayList<ConfigurationMechanism>(stack0);
      ArrayList<Parameter> arrayList1 = new ArrayList<Parameter>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, arrayList0, arrayList1);
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration();
      Parameter parameter0 = new Parameter(0L, (String) null, "", (Date) null, (Date) null, "r3", (Parameter) null, arrayList1, generalConfiguration0, mechanism0);
      arrayList1.add(parameter0);
      List<Parameter> list0 = mechanism0.getParameters();
      assertTrue(list0.contains(parameter0));
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      List<Parameter> list0 = mechanism0.getParameters();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MechanismType mechanismType0 = MechanismType.RATING_TYPE;
      Instant instant0 = MockInstant.ofEpochSecond(0L);
      Date date0 = Date.from(instant0);
      Mechanism mechanism0 = new Mechanism(mechanismType0, date0, date0, (List<ConfigurationMechanism>) null, (List<Parameter>) null);
      MechanismType mechanismType1 = mechanism0.getType();
      assertEquals(MechanismType.RATING_TYPE, mechanismType1);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MechanismType mechanismType0 = MechanismType.TEXT_TYPE;
      MockDate mockDate0 = new MockDate((-642), 0, 0, 0, 4719, 242);
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Vector<Parameter> vector0 = new Vector<Parameter>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, mockDate0, mockDate0, linkedList0, vector0);
      Date date0 = mechanism0.getUpdatedAt();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MechanismType mechanismType0 = MechanismType.CATEGORY_TYPE;
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Stack<Parameter> stack0 = new Stack<Parameter>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, (Date) null, (Date) null, linkedList0, stack0);
      Parameter parameter0 = new Parameter(0, "n`lo&G8vUHl25 t", "n`lo&G8vUHl25 t", ", ", (Parameter) null, stack0);
      stack0.add(parameter0);
      // Undeclared exception!
      try { 
        mechanism0.filterByLanguage(", ", "WNSoM>V'F_");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MechanismType mechanismType0 = MechanismType.INFO_TYPE;
      Vector<ConfigurationMechanism> vector0 = new Vector<ConfigurationMechanism>();
      Vector<Parameter> vector1 = new Vector<Parameter>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, vector0, vector1);
      mechanism0.filterByLanguage("occurrences", "'b4Q?vuXj");
      assertEquals(MechanismType.INFO_TYPE, mechanism0.getType());
  }
}
