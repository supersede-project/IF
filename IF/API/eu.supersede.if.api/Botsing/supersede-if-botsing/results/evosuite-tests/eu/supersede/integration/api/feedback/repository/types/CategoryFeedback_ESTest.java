/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 10:51:21 GMT 2019
 */

package eu.supersede.integration.api.feedback.repository.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.feedback.orchestrator.types.ConfigurationMechanism;
import eu.supersede.integration.api.feedback.orchestrator.types.Mechanism;
import eu.supersede.integration.api.feedback.orchestrator.types.MechanismType;
import eu.supersede.integration.api.feedback.orchestrator.types.Parameter;
import eu.supersede.integration.api.feedback.repository.types.AttachmentFeedback;
import eu.supersede.integration.api.feedback.repository.types.AudioFeedback;
import eu.supersede.integration.api.feedback.repository.types.CategoryFeedback;
import eu.supersede.integration.api.feedback.repository.types.ContextInformation;
import eu.supersede.integration.api.feedback.repository.types.Feedback;
import eu.supersede.integration.api.feedback.repository.types.RatingFeedback;
import eu.supersede.integration.api.feedback.repository.types.ScreenshotFeedback;
import eu.supersede.integration.api.feedback.repository.types.Status;
import eu.supersede.integration.api.feedback.repository.types.TextFeedback;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import org.evosuite.runtime.mock.java.util.MockDate;

public class CategoryFeedback_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CategoryFeedback categoryFeedback0 = new CategoryFeedback();
      Mechanism mechanism0 = categoryFeedback0.getMechanism();
      assertNull(mechanism0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CategoryFeedback categoryFeedback0 = new CategoryFeedback((Feedback) null, 3200L, (Long) null, "IpjHhJ3!GyK{WFyUs");
      long long0 = categoryFeedback0.getMechanismId();
      assertEquals(3200L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CategoryFeedback categoryFeedback0 = new CategoryFeedback();
      String string0 = categoryFeedback0.toString();
      assertEquals("CategoryFeedback[id=0]", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CategoryFeedback categoryFeedback0 = new CategoryFeedback((Feedback) null, 3200L, (Long) null, "IpjHhJ3!GyK{WFyUs");
      categoryFeedback0.getCategoryValue();
      assertEquals(3200L, categoryFeedback0.getMechanismId());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CategoryFeedback categoryFeedback0 = new CategoryFeedback();
      categoryFeedback0.setParameterId((Long) null);
      assertEquals(0L, categoryFeedback0.getId());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CategoryFeedback categoryFeedback0 = new CategoryFeedback();
      long long0 = categoryFeedback0.getId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CategoryFeedback categoryFeedback0 = new CategoryFeedback();
      categoryFeedback0.setText("");
      assertNull(categoryFeedback0.getCategoryValue());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CategoryFeedback categoryFeedback0 = new CategoryFeedback();
      Long long0 = categoryFeedback0.getParameterId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CategoryFeedback categoryFeedback0 = new CategoryFeedback((Feedback) null, 3200L, (Long) null, "IpjHhJ3!GyK{WFyUs");
      categoryFeedback0.setFeedback((Feedback) null);
      assertEquals(3200L, categoryFeedback0.getMechanismId());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Feedback feedback0 = new Feedback();
      CategoryFeedback categoryFeedback0 = new CategoryFeedback(feedback0, (-2968L), "I_?$rhI`G0[;_~asnH)");
      categoryFeedback0.getText();
      assertEquals((-2968L), categoryFeedback0.getMechanismId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CategoryFeedback categoryFeedback0 = new CategoryFeedback((Feedback) null, 3200L, (Long) null, "IpjHhJ3!GyK{WFyUs");
      categoryFeedback0.setMechanismId(1746L);
      assertEquals(1746L, categoryFeedback0.getMechanismId());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CategoryFeedback categoryFeedback0 = new CategoryFeedback();
      categoryFeedback0.setCategoryValue("");
      String string0 = categoryFeedback0.getCategoryValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CategoryFeedback categoryFeedback0 = new CategoryFeedback();
      categoryFeedback0.setCategoryValue("eu.supersede.integration.api.feedback.repository.types.CategoryFeedback");
      String string0 = categoryFeedback0.getCategoryValue();
      assertEquals("eu.supersede.integration.api.feedback.repository.types.CategoryFeedback", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Feedback feedback0 = new Feedback("CharMatcher.javaLetter()", (String) null, 509L, 2841L, "de%pa");
      Long long0 = new Long(4572L);
      CategoryFeedback categoryFeedback0 = new CategoryFeedback(feedback0, 509L, long0);
      categoryFeedback0.getFeedback();
      assertEquals(509L, categoryFeedback0.getMechanismId());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Feedback feedback0 = new Feedback((String) null, "I}Sx=2MbSpp_", (-1651L), (-1790L), "9T!zV:CH7Xp(");
      feedback0.setId((-1121L));
      CategoryFeedback categoryFeedback0 = new CategoryFeedback(feedback0, 0L, (String) null);
      Feedback feedback1 = categoryFeedback0.getFeedback();
      assertSame(feedback0, feedback1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Feedback feedback0 = new Feedback();
      Long long0 = new Long(5167L);
      feedback0.setId(1708L);
      CategoryFeedback categoryFeedback0 = new CategoryFeedback(feedback0, (-2308L), long0);
      categoryFeedback0.getFeedback();
      assertEquals((-2308L), categoryFeedback0.getMechanismId());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CategoryFeedback categoryFeedback0 = new CategoryFeedback();
      Feedback feedback0 = categoryFeedback0.getFeedback();
      assertNull(feedback0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Feedback feedback0 = new Feedback();
      CategoryFeedback categoryFeedback0 = new CategoryFeedback(feedback0, (-2968L), "I_?$rhI`G0[;_~asnH)");
      categoryFeedback0.setId((-2968L));
      long long0 = categoryFeedback0.getId();
      assertEquals((-2968L), long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Feedback feedback0 = new Feedback();
      CategoryFeedback categoryFeedback0 = new CategoryFeedback(feedback0, 207L, (Long) null);
      categoryFeedback0.setId(51L);
      long long0 = categoryFeedback0.getId();
      assertEquals(51L, long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Long long0 = new Long(0L);
      CategoryFeedback categoryFeedback0 = new CategoryFeedback((Feedback) null, 0L, long0, "dt_}+.,b/");
      Mechanism mechanism0 = new Mechanism();
      mechanism0.setId((-2371L));
      categoryFeedback0.setMechanism(mechanism0);
      Mechanism mechanism1 = categoryFeedback0.getMechanism();
      assertSame(mechanism1, mechanism0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Feedback feedback0 = new Feedback();
      CategoryFeedback categoryFeedback0 = new CategoryFeedback(feedback0, 0L, "");
      Mechanism mechanism0 = new Mechanism();
      mechanism0.setId(2570940L);
      categoryFeedback0.setMechanism(mechanism0);
      Mechanism mechanism1 = categoryFeedback0.getMechanism();
      assertEquals(0, mechanism1.getOrder());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CategoryFeedback categoryFeedback0 = new CategoryFeedback((Feedback) null, 3200L, (Long) null, "IpjHhJ3!GyK{WFyUs");
      LinkedList<Parameter> linkedList0 = new LinkedList<Parameter>();
      MechanismType mechanismType0 = MechanismType.TEXT_TYPE;
      MockDate mockDate0 = new MockDate((-3574), (-1), 2130);
      Mechanism mechanism0 = new Mechanism(mechanismType0, mockDate0, mockDate0, (List<ConfigurationMechanism>) null, linkedList0);
      mechanism0.setOrder((-5389));
      categoryFeedback0.setMechanism(mechanism0);
      categoryFeedback0.getMechanism();
      assertEquals(3200L, categoryFeedback0.getMechanismId());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Long long0 = new Long(0L);
      CategoryFeedback categoryFeedback0 = new CategoryFeedback((Feedback) null, 0L, long0, "dt_}+.,b/");
      Mechanism mechanism0 = new Mechanism();
      mechanism0.setOrder(1555);
      categoryFeedback0.setMechanism(mechanism0);
      Mechanism mechanism1 = categoryFeedback0.getMechanism();
      assertNull(mechanism1.getType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CategoryFeedback categoryFeedback0 = new CategoryFeedback();
      Mechanism mechanism0 = new Mechanism();
      mechanism0.setActive(true);
      categoryFeedback0.setMechanism(mechanism0);
      Mechanism mechanism1 = categoryFeedback0.getMechanism();
      assertSame(mechanism1, mechanism0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Feedback feedback0 = new Feedback();
      CategoryFeedback categoryFeedback0 = new CategoryFeedback(feedback0, (-2968L), "I_?$rhI`G0[;_~asnH)");
      long long0 = categoryFeedback0.getMechanismId();
      assertEquals((-2968L), long0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Feedback feedback0 = new Feedback();
      Long long0 = new Long((-2968L));
      CategoryFeedback categoryFeedback0 = new CategoryFeedback(feedback0, 0L, long0, "");
      long long1 = categoryFeedback0.getMechanismId();
      assertEquals(0L, long1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Feedback feedback0 = new Feedback();
      Long long0 = new Long((-1L));
      CategoryFeedback categoryFeedback0 = new CategoryFeedback(feedback0, (-1L), long0, "");
      categoryFeedback0.getParameterId();
      assertEquals((-1L), categoryFeedback0.getMechanismId());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Feedback feedback0 = new Feedback("CharMatcher.javaLetter()", (String) null, 509L, 2841L, "de%pa");
      Long long0 = new Long(4572L);
      CategoryFeedback categoryFeedback0 = new CategoryFeedback(feedback0, 509L, long0);
      categoryFeedback0.getParameterId();
      assertEquals(509L, categoryFeedback0.getMechanismId());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockDate mockDate0 = new MockDate(2783, 2783, (-849), 2783, 2783);
      ContextInformation contextInformation0 = new ContextInformation();
      LinkedList<AttachmentFeedback> linkedList0 = new LinkedList<AttachmentFeedback>();
      ArrayList<AudioFeedback> arrayList0 = new ArrayList<AudioFeedback>();
      Stack<CategoryFeedback> stack0 = new Stack<CategoryFeedback>();
      LinkedList<RatingFeedback> linkedList1 = new LinkedList<RatingFeedback>();
      ArrayList<ScreenshotFeedback> arrayList1 = new ArrayList<ScreenshotFeedback>();
      Stack<TextFeedback> stack1 = new Stack<TextFeedback>();
      ArrayList<Status> arrayList2 = new ArrayList<Status>();
      Feedback feedback0 = new Feedback("M >oMK", "M >oMK", mockDate0, mockDate0, 0L, (-1L), "M >oMK", contextInformation0, linkedList0, arrayList0, stack0, linkedList1, arrayList1, stack1, arrayList2);
      Long long0 = new Long(0L);
      CategoryFeedback categoryFeedback0 = new CategoryFeedback(feedback0, (-4409L), long0, "Converter.identity()");
      categoryFeedback0.getParameterId();
      assertEquals((-4409L), categoryFeedback0.getMechanismId());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Feedback feedback0 = new Feedback();
      Long long0 = new Long((-2968L));
      CategoryFeedback categoryFeedback0 = new CategoryFeedback(feedback0, 0L, long0, "");
      String string0 = categoryFeedback0.getText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CategoryFeedback categoryFeedback0 = new CategoryFeedback();
      String string0 = categoryFeedback0.getText();
      assertNull(string0);
  }
}
