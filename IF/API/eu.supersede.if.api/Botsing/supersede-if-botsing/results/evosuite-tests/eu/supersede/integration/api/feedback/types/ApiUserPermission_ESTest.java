/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 11:00:20 GMT 2019
 */

package eu.supersede.integration.api.feedback.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.feedback.types.ApiUserPermission;

public class ApiUserPermission_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ApiUserPermission apiUserPermission0 = new ApiUserPermission();
      Integer integer0 = apiUserPermission0.getUserId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ApiUserPermission apiUserPermission0 = new ApiUserPermission();
      Integer integer0 = apiUserPermission0.getId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ApiUserPermission apiUserPermission0 = new ApiUserPermission();
      Integer integer0 = new Integer(0);
      apiUserPermission0.setId(integer0);
      Integer integer1 = apiUserPermission0.getId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ApiUserPermission apiUserPermission0 = new ApiUserPermission();
      boolean boolean0 = apiUserPermission0.isHasPermission();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ApiUserPermission apiUserPermission0 = new ApiUserPermission();
      Integer integer0 = apiUserPermission0.getApplicationId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ApiUserPermission apiUserPermission0 = new ApiUserPermission();
      Integer integer0 = new Integer(1302);
      apiUserPermission0.setApplicationId(integer0);
      Integer integer1 = apiUserPermission0.getApplicationId();
      assertEquals(1302, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ApiUserPermission apiUserPermission0 = new ApiUserPermission();
      Integer integer0 = new Integer((-759));
      apiUserPermission0.setApplicationId(integer0);
      Integer integer1 = apiUserPermission0.getApplicationId();
      assertEquals((-759), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ApiUserPermission apiUserPermission0 = new ApiUserPermission();
      Integer integer0 = new Integer(0);
      apiUserPermission0.setApplicationId(integer0);
      Integer integer1 = apiUserPermission0.getApplicationId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ApiUserPermission apiUserPermission0 = new ApiUserPermission();
      Integer integer0 = new Integer((-1));
      apiUserPermission0.setId(integer0);
      Integer integer1 = apiUserPermission0.getId();
      assertEquals((-1), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ApiUserPermission apiUserPermission0 = new ApiUserPermission();
      Integer integer0 = new Integer(1302);
      apiUserPermission0.setId(integer0);
      Integer integer1 = apiUserPermission0.getId();
      assertEquals(1302, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ApiUserPermission apiUserPermission0 = new ApiUserPermission();
      Integer integer0 = new Integer((-176));
      apiUserPermission0.setUserId(integer0);
      Integer integer1 = apiUserPermission0.getUserId();
      assertEquals((-176), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ApiUserPermission apiUserPermission0 = new ApiUserPermission();
      Integer integer0 = new Integer(1302);
      apiUserPermission0.setUserId(integer0);
      Integer integer1 = apiUserPermission0.getUserId();
      assertEquals(1302, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ApiUserPermission apiUserPermission0 = new ApiUserPermission();
      Integer integer0 = new Integer(0);
      apiUserPermission0.setUserId(integer0);
      Integer integer1 = apiUserPermission0.getUserId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ApiUserPermission apiUserPermission0 = new ApiUserPermission();
      apiUserPermission0.setHasPermission(true);
      boolean boolean0 = apiUserPermission0.isHasPermission();
      assertTrue(boolean0);
  }
}
