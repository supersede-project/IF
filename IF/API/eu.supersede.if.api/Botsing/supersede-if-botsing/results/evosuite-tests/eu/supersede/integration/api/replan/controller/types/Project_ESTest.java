/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 11:31:38 GMT 2019
 */

package eu.supersede.integration.api.replan.controller.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.replan.controller.types.Project;
import eu.supersede.integration.api.replan.controller.types.Resource;
import java.util.List;
import java.util.Stack;

public class Project_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Project project0 = new Project();
      Double double0 = project0.getHoursPerWeekFullTimeResource();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Project project0 = new Project();
      String string0 = project0.getEffortUnit();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Project project0 = new Project();
      Double double0 = project0.getHoursPerEffortUnit();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Project project0 = new Project();
      project0.setResources((List<Resource>) null);
      List<Resource> list0 = project0.getResources();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Project project0 = new Project();
      project0.setEffortUnit("");
      String string0 = project0.getEffortUnit();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Project project0 = new Project();
      project0.setEffortUnit("'/ %Y");
      String string0 = project0.getEffortUnit();
      assertEquals("'/ %Y", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Project project0 = new Project();
      Double double0 = new Double((-1.0));
      project0.setHoursPerEffortUnit(double0);
      Double double1 = project0.getHoursPerEffortUnit();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Project project0 = new Project();
      Double double0 = new Double(0.5);
      project0.setHoursPerEffortUnit(double0);
      Double double1 = project0.getHoursPerEffortUnit();
      assertEquals(0.5, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Project project0 = new Project();
      Double double0 = new Double(0.0);
      project0.setHoursPerEffortUnit(double0);
      Double double1 = project0.getHoursPerEffortUnit();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Project project0 = new Project();
      Double double0 = new Double((-1.0));
      project0.setHoursPerWeekFullTimeResource(double0);
      Double double1 = project0.getHoursPerWeekFullTimeResource();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Project project0 = new Project();
      Double double0 = Double.valueOf(0.5);
      project0.setHoursPerWeekFullTimeResource(double0);
      Double double1 = project0.getHoursPerWeekFullTimeResource();
      assertEquals(0.5, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Project project0 = new Project();
      Double double0 = new Double(0.0);
      project0.setHoursPerWeekFullTimeResource(double0);
      Double double1 = project0.getHoursPerWeekFullTimeResource();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Project project0 = new Project();
      Stack<Resource> stack0 = new Stack<Resource>();
      Resource resource0 = new Resource();
      stack0.add(resource0);
      project0.setResources(stack0);
      List<Resource> list0 = project0.getResources();
      assertTrue(list0.contains(resource0));
  }
}
