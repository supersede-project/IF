/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 09:56:56 GMT 2019
 */

package eu.supersede.integration.api.adaptation.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.adaptation.types.ActionOnAttribute;
import eu.supersede.integration.api.adaptation.types.ActionOnFeature;
import eu.supersede.integration.api.adaptation.types.Alert;
import eu.supersede.integration.api.adaptation.types.AttachedValue;
import eu.supersede.integration.api.adaptation.types.Condition;
import eu.supersede.integration.api.adaptation.types.DataID;
import eu.supersede.integration.api.adaptation.types.FeatureAction;
import eu.supersede.integration.api.adaptation.types.ModelSystem;
import eu.supersede.integration.api.adaptation.types.Operator;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;

public class Alert_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Alert alert0 = new Alert();
      alert0.getTenant();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Alert alert0 = new Alert();
      String string0 = alert0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Alert alert0 = new Alert();
      List<AttachedValue> list0 = alert0.getAttachedValues();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Alert alert0 = new Alert();
      List<Condition> list0 = alert0.getConditions();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Alert alert0 = new Alert();
      List<ActionOnFeature> list0 = alert0.getActionFeatures();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayList<Condition> arrayList0 = new ArrayList<Condition>();
      ModelSystem modelSystem0 = ModelSystem.AtosFGcat;
      Alert alert0 = new Alert("", "R", 1328L, modelSystem0, arrayList0, (List<ActionOnFeature>) null, (List<ActionOnAttribute>) null, (List<AttachedValue>) null);
      alert0.getTenant();
      assertEquals("R", alert0.getApplicationId());
      assertEquals(1328L, alert0.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Alert alert0 = new Alert();
      alert0.setApplicationId("");
      String string0 = alert0.getApplicationId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Alert alert0 = new Alert();
      long long0 = alert0.getTimestamp();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Alert alert0 = new Alert();
      String string0 = alert0.getApplicationId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Alert alert0 = new Alert();
      ModelSystem modelSystem0 = ModelSystem.SenerconFG;
      alert0.setTenant(modelSystem0);
      assertEquals(ModelSystem.SenerconFG, alert0.getTenant());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Alert alert0 = new Alert();
      List<ActionOnAttribute> list0 = alert0.getActionAttributes();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Alert alert0 = new Alert();
      ArrayList<AttachedValue> arrayList0 = new ArrayList<AttachedValue>();
      alert0.setAttachedValues(arrayList0);
      assertEquals(0L, alert0.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Alert alert0 = new Alert();
      ArrayList<ActionOnAttribute> arrayList0 = new ArrayList<ActionOnAttribute>();
      alert0.actionAttributes = (List<ActionOnAttribute>) arrayList0;
      ActionOnAttribute actionOnAttribute0 = new ActionOnAttribute();
      arrayList0.add(actionOnAttribute0);
      List<ActionOnAttribute> list0 = alert0.getActionAttributes();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ModelSystem modelSystem0 = ModelSystem.AtosFGcat;
      ArrayList<ActionOnFeature> arrayList0 = new ArrayList<ActionOnFeature>();
      ArrayList<ActionOnAttribute> arrayList1 = new ArrayList<ActionOnAttribute>();
      ArrayList<AttachedValue> arrayList2 = new ArrayList<AttachedValue>();
      Alert alert0 = new Alert("com.google.common.base.CharMatcher$JavaDigit", "com.google.common.base.CharMatcher$JavaDigit", (-1L), modelSystem0, (List<Condition>) null, arrayList0, arrayList1, arrayList2);
      List<ActionOnAttribute> list0 = alert0.getActionAttributes();
      assertEquals((-1L), alert0.getTimestamp());
      assertNotNull(list0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Alert alert0 = new Alert();
      ArrayList<ActionOnFeature> arrayList0 = new ArrayList<ActionOnFeature>();
      FeatureAction featureAction0 = FeatureAction.select;
      ActionOnFeature actionOnFeature0 = new ActionOnFeature("VALUE", featureAction0);
      arrayList0.add(actionOnFeature0);
      alert0.setActionFeatures(arrayList0);
      List<ActionOnFeature> list0 = alert0.getActionFeatures();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ModelSystem modelSystem0 = ModelSystem.Siemens;
      LinkedList<Condition> linkedList0 = new LinkedList<Condition>();
      Vector<ActionOnFeature> vector0 = new Vector<ActionOnFeature>(0);
      Stack<ActionOnAttribute> stack0 = new Stack<ActionOnAttribute>();
      Alert alert0 = new Alert("", "", 0L, modelSystem0, linkedList0, vector0, stack0, (List<AttachedValue>) null);
      List<ActionOnFeature> list0 = alert0.getActionFeatures();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ModelSystem modelSystem0 = ModelSystem.AtosFGcat;
      ArrayList<ActionOnFeature> arrayList0 = new ArrayList<ActionOnFeature>();
      ArrayList<ActionOnAttribute> arrayList1 = new ArrayList<ActionOnAttribute>();
      ArrayList<AttachedValue> arrayList2 = new ArrayList<AttachedValue>();
      Alert alert0 = new Alert("com.google.common.base.CharMatcher$JavaDigit", "com.google.common.base.CharMatcher$JavaDigit", (-1L), modelSystem0, (List<Condition>) null, arrayList0, arrayList1, arrayList2);
      String string0 = alert0.getApplicationId();
      assertEquals((-1L), alert0.getTimestamp());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Alert alert0 = new Alert();
      ArrayList<AttachedValue> arrayList0 = new ArrayList<AttachedValue>();
      alert0.attachedValues = (List<AttachedValue>) arrayList0;
      AttachedValue attachedValue0 = new AttachedValue();
      arrayList0.add(attachedValue0);
      List<AttachedValue> list0 = alert0.getAttachedValues();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ModelSystem modelSystem0 = ModelSystem.SiemensMonitoring;
      Stack<Condition> stack0 = new Stack<Condition>();
      LinkedList<ActionOnFeature> linkedList0 = new LinkedList<ActionOnFeature>();
      Stack<AttachedValue> stack1 = new Stack<AttachedValue>();
      Alert alert0 = new Alert((String) null, (String) null, 0L, modelSystem0, stack0, linkedList0, (List<ActionOnAttribute>) null, stack1);
      List<AttachedValue> list0 = alert0.getAttachedValues();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Alert alert0 = new Alert();
      ArrayList<Condition> arrayList0 = new ArrayList<Condition>();
      DataID dataID0 = new DataID();
      Operator operator0 = Operator.GEq;
      Double double0 = new Double((-460.20649944464));
      Condition condition0 = new Condition(dataID0, operator0, double0);
      arrayList0.add(condition0);
      alert0.setConditions(arrayList0);
      List<Condition> list0 = alert0.getConditions();
      assertTrue(list0.contains(condition0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ModelSystem modelSystem0 = ModelSystem.AtosFG;
      Stack<Condition> stack0 = new Stack<Condition>();
      ArrayList<ActionOnFeature> arrayList0 = new ArrayList<ActionOnFeature>();
      LinkedList<ActionOnAttribute> linkedList0 = new LinkedList<ActionOnAttribute>();
      Alert alert0 = new Alert("", "", 1521L, modelSystem0, stack0, arrayList0, linkedList0, (List<AttachedValue>) null);
      List<Condition> list0 = alert0.getConditions();
      assertNotNull(list0);
      assertEquals(1521L, alert0.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ModelSystem modelSystem0 = ModelSystem.Supersede;
      Stack<Condition> stack0 = new Stack<Condition>();
      LinkedList<ActionOnFeature> linkedList0 = new LinkedList<ActionOnFeature>();
      Stack<AttachedValue> stack1 = new Stack<AttachedValue>();
      Alert alert0 = new Alert("", (String) null, 0L, modelSystem0, stack0, linkedList0, (List<ActionOnAttribute>) null, stack1);
      String string0 = alert0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Alert alert0 = new Alert();
      alert0.setId("t>");
      String string0 = alert0.getId();
      assertEquals("t>", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Alert alert0 = new Alert();
      alert0.setTimestamp((-874L));
      long long0 = alert0.getTimestamp();
      assertEquals((-874L), long0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ModelSystem modelSystem0 = ModelSystem.SenerconFG;
      Vector<ActionOnAttribute> vector0 = new Vector<ActionOnAttribute>();
      Alert alert0 = new Alert("BitArrays must be of equal length (%s != %s)", "eu.supersede.integration.api.adaptation.types.Alert", 1L, modelSystem0, (List<Condition>) null, (List<ActionOnFeature>) null, vector0, (List<AttachedValue>) null);
      long long0 = alert0.getTimestamp();
      assertEquals("eu.supersede.integration.api.adaptation.types.Alert", alert0.getApplicationId());
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Alert alert0 = new Alert();
      ArrayList<ActionOnAttribute> arrayList0 = new ArrayList<ActionOnAttribute>();
      alert0.setActionAttributes(arrayList0);
      assertNull(alert0.getTenant());
  }
}
