/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 11:15:16 GMT 2019
 */

package eu.supersede.integration.api.monitoring.manager.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.monitoring.manager.types.MonitorSpecificConfiguration;
import java.net.URL;
import java.net.URLStreamHandler;
import org.apache.axis2.deployment.DeploymentClassLoader;
import org.evosuite.runtime.mock.java.net.MockURL;

public class MonitorSpecificConfiguration_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MonitorSpecificConfiguration monitorSpecificConfiguration0 = new MonitorSpecificConfiguration();
      Integer integer0 = monitorSpecificConfiguration0.getTimeSlot();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MonitorSpecificConfiguration monitorSpecificConfiguration0 = new MonitorSpecificConfiguration();
      URL uRL0 = monitorSpecificConfiguration0.getKafkaEndpoint();
      assertNull(uRL0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MonitorSpecificConfiguration monitorSpecificConfiguration0 = new MonitorSpecificConfiguration();
      byte[] byteArray0 = new byte[3];
      DeploymentClassLoader.ByteUrlStreamHandler deploymentClassLoader_ByteUrlStreamHandler0 = new DeploymentClassLoader.ByteUrlStreamHandler(byteArray0);
      URL uRL0 = MockURL.URL("6 \"Xoj@|WAxGn{_", "6 \"Xoj@|WAxGn{_", (int) (byte)11, "6 \"Xoj@|WAxGn{_", (URLStreamHandler) deploymentClassLoader_ByteUrlStreamHandler0);
      monitorSpecificConfiguration0.setKafkaEndpoint(uRL0);
      URL uRL1 = monitorSpecificConfiguration0.getKafkaEndpoint();
      assertEquals("6 \"Xoj@|WAxGn{_", uRL1.getPath());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MonitorSpecificConfiguration monitorSpecificConfiguration0 = new MonitorSpecificConfiguration();
      String string0 = monitorSpecificConfiguration0.getToolName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MonitorSpecificConfiguration monitorSpecificConfiguration0 = new MonitorSpecificConfiguration();
      monitorSpecificConfiguration0.setKafkaTopic("p4=j(`g&`QhK");
      String string0 = monitorSpecificConfiguration0.getKafkaTopic();
      assertEquals("p4=j(`g&`QhK", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MonitorSpecificConfiguration monitorSpecificConfiguration0 = new MonitorSpecificConfiguration();
      Integer integer0 = monitorSpecificConfiguration0.getId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MonitorSpecificConfiguration monitorSpecificConfiguration0 = new MonitorSpecificConfiguration();
      String string0 = monitorSpecificConfiguration0.getKafkaTopic();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MonitorSpecificConfiguration monitorSpecificConfiguration0 = new MonitorSpecificConfiguration();
      Integer integer0 = new Integer((-763));
      monitorSpecificConfiguration0.setId(integer0);
      Integer integer1 = monitorSpecificConfiguration0.getId();
      assertEquals((-763), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MonitorSpecificConfiguration monitorSpecificConfiguration0 = new MonitorSpecificConfiguration();
      Integer integer0 = new Integer(860);
      monitorSpecificConfiguration0.id = integer0;
      Integer integer1 = monitorSpecificConfiguration0.getId();
      assertEquals(860, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MonitorSpecificConfiguration monitorSpecificConfiguration0 = new MonitorSpecificConfiguration();
      Integer integer0 = new Integer(0);
      monitorSpecificConfiguration0.setId(integer0);
      Integer integer1 = monitorSpecificConfiguration0.getId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MonitorSpecificConfiguration monitorSpecificConfiguration0 = new MonitorSpecificConfiguration();
      URL uRL0 = MockURL.getHttpExample();
      monitorSpecificConfiguration0.setKafkaEndpoint(uRL0);
      URL uRL1 = monitorSpecificConfiguration0.getKafkaEndpoint();
      assertEquals((-1), uRL1.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MonitorSpecificConfiguration monitorSpecificConfiguration0 = new MonitorSpecificConfiguration();
      byte[] byteArray0 = new byte[4];
      DeploymentClassLoader.ByteUrlStreamHandler deploymentClassLoader_ByteUrlStreamHandler0 = new DeploymentClassLoader.ByteUrlStreamHandler(byteArray0);
      URL uRL0 = MockURL.URL("UiAh", "UiAh", 0, "expectedUrl is null", (URLStreamHandler) deploymentClassLoader_ByteUrlStreamHandler0);
      monitorSpecificConfiguration0.setKafkaEndpoint(uRL0);
      URL uRL1 = monitorSpecificConfiguration0.getKafkaEndpoint();
      assertEquals("UiAh", uRL1.getHost());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MonitorSpecificConfiguration monitorSpecificConfiguration0 = new MonitorSpecificConfiguration();
      monitorSpecificConfiguration0.setKafkaTopic("");
      String string0 = monitorSpecificConfiguration0.getKafkaTopic();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MonitorSpecificConfiguration monitorSpecificConfiguration0 = new MonitorSpecificConfiguration();
      Integer integer0 = new Integer((-382));
      monitorSpecificConfiguration0.timeSlot = integer0;
      Integer integer1 = monitorSpecificConfiguration0.getTimeSlot();
      assertEquals((-382), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MonitorSpecificConfiguration monitorSpecificConfiguration0 = new MonitorSpecificConfiguration();
      Integer integer0 = new Integer(56320);
      monitorSpecificConfiguration0.setTimeSlot(integer0);
      Integer integer1 = monitorSpecificConfiguration0.getTimeSlot();
      assertEquals(56320, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MonitorSpecificConfiguration monitorSpecificConfiguration0 = new MonitorSpecificConfiguration();
      Integer integer0 = new Integer(0);
      monitorSpecificConfiguration0.timeSlot = integer0;
      Integer integer1 = monitorSpecificConfiguration0.getTimeSlot();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MonitorSpecificConfiguration monitorSpecificConfiguration0 = new MonitorSpecificConfiguration();
      monitorSpecificConfiguration0.toolName = "";
      String string0 = monitorSpecificConfiguration0.getToolName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MonitorSpecificConfiguration monitorSpecificConfiguration0 = new MonitorSpecificConfiguration();
      monitorSpecificConfiguration0.setToolName("fJ>s\"v5qf/},#");
      String string0 = monitorSpecificConfiguration0.getToolName();
      assertEquals("fJ>s\"v5qf/},#", string0);
  }
}
