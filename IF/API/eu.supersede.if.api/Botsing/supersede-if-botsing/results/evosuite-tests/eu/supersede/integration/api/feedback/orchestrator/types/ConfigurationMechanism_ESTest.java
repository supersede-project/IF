/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 10:26:48 GMT 2019
 */

package eu.supersede.integration.api.feedback.orchestrator.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.feedback.orchestrator.types.Application;
import eu.supersede.integration.api.feedback.orchestrator.types.Configuration;
import eu.supersede.integration.api.feedback.orchestrator.types.ConfigurationMechanism;
import eu.supersede.integration.api.feedback.orchestrator.types.ConfigurationUserGroup;
import eu.supersede.integration.api.feedback.orchestrator.types.GeneralConfiguration;
import eu.supersede.integration.api.feedback.orchestrator.types.Mechanism;
import eu.supersede.integration.api.feedback.orchestrator.types.MechanismType;
import eu.supersede.integration.api.feedback.orchestrator.types.Parameter;
import eu.supersede.integration.api.feedback.orchestrator.types.TriggerType;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import org.evosuite.runtime.mock.java.util.MockDate;

public class ConfigurationMechanism_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism();
      MockDate mockDate0 = new MockDate();
      configurationMechanism0.setCreatedAt(mockDate0);
      assertFalse(configurationMechanism0.isActive());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism((Configuration) null, mechanism0, false, (-110));
      configurationMechanism0.setConfiguration((Configuration) null);
      assertFalse(configurationMechanism0.isActive());
      assertEquals((-110), configurationMechanism0.getOrder());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      Mechanism mechanism0 = new Mechanism();
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism(configuration0, mechanism0, true, 0);
      int int0 = configurationMechanism0.getOrder();
      assertEquals(0, int0);
      assertTrue(configurationMechanism0.isActive());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism();
      long long0 = configurationMechanism0.getId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism((Configuration) null, mechanism0, true, (-787));
      boolean boolean0 = configurationMechanism0.isActive();
      assertEquals((-787), configurationMechanism0.getOrder());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism((Configuration) null, mechanism0, true, (-787));
      assertTrue(configurationMechanism0.isActive());
      
      configurationMechanism0.setActive(false);
      boolean boolean0 = configurationMechanism0.isActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism((Configuration) null, mechanism0, true, (-787));
      configurationMechanism0.getConfiguration();
      assertTrue(configurationMechanism0.isActive());
      assertEquals((-787), configurationMechanism0.getOrder());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism((Configuration) null, mechanism0, true, (-787));
      configurationMechanism0.getCreatedAt();
      assertTrue(configurationMechanism0.isActive());
      assertEquals((-787), configurationMechanism0.getOrder());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism(configuration0, true, 2);
      configurationMechanism0.getUpdatedAt();
      assertEquals(2, configurationMechanism0.getOrder());
      assertTrue(configurationMechanism0.isActive());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism();
      MockDate mockDate0 = new MockDate();
      configurationMechanism0.setUpdatedAt(mockDate0);
      assertEquals(0L, configurationMechanism0.getId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PULL;
      MockDate mockDate0 = new MockDate((-1919), 1222, 1222);
      Vector<ConfigurationMechanism> vector0 = new Vector<ConfigurationMechanism>();
      Vector<ConfigurationUserGroup> vector1 = new Vector<ConfigurationUserGroup>();
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration();
      ArrayList<Mechanism> arrayList0 = new ArrayList<Mechanism>();
      Configuration configuration0 = new Configuration("", triggerType0, mockDate0, mockDate0, vector0, vector1, (Application) null, generalConfiguration0, false, false, arrayList0);
      MechanismType mechanismType0 = MechanismType.RATING_TYPE;
      Mechanism mechanism0 = new Mechanism(mechanismType0, mockDate0, mockDate0, vector0, (List<Parameter>) null);
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism(configuration0, mechanism0, true, (-599));
      String string0 = configurationMechanism0.toString();
      assertEquals("ConfigurationMechanism[id=0, active='true', order='-599', configuration.id='0', mechanism.id='0']", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism();
      String string0 = configurationMechanism0.toString();
      assertEquals("ConfigurationMechanism[id=0, active='false', order='0', configuration.id='0', mechanism.id='0']", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism(configuration0, true, 1849);
      configuration0.setId((-1L));
      configurationMechanism0.getConfiguration();
      assertEquals(1849, configurationMechanism0.getOrder());
      assertTrue(configurationMechanism0.isActive());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism(configuration0, true, 1849);
      configuration0.setId(1849);
      configurationMechanism0.getConfiguration();
      assertEquals(1849, configurationMechanism0.getOrder());
      assertTrue(configurationMechanism0.isActive());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PULL;
      MockDate mockDate0 = new MockDate(0L);
      ArrayList<ConfigurationMechanism> arrayList0 = new ArrayList<ConfigurationMechanism>();
      LinkedList<ConfigurationUserGroup> linkedList0 = new LinkedList<ConfigurationUserGroup>();
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration();
      Application application0 = new Application();
      ArrayList<Mechanism> arrayList1 = new ArrayList<Mechanism>();
      Configuration configuration0 = new Configuration("0Z~i]TwDAl>HFz;g0qh", triggerType0, mockDate0, mockDate0, arrayList0, linkedList0, application0, generalConfiguration0, true, true, arrayList1);
      MechanismType mechanismType0 = MechanismType.TEXT_TYPE;
      Mechanism mechanism0 = new Mechanism(mechanismType0, arrayList0, (List<Parameter>) null);
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism(configuration0, mechanism0, true, 731, mockDate0, mockDate0);
      configurationMechanism0.getConfiguration();
      assertTrue(configurationMechanism0.isActive());
      assertEquals(731, configurationMechanism0.getOrder());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      MechanismType mechanismType0 = MechanismType.TEXT_TYPE;
      Mechanism mechanism0 = new Mechanism(mechanismType0, (List<ConfigurationMechanism>) null, (List<Parameter>) null);
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism(configuration0, mechanism0, false, 1165);
      configurationMechanism0.onCreate();
      configurationMechanism0.getCreatedAt();
      assertFalse(configurationMechanism0.isActive());
      assertEquals(1165, configurationMechanism0.getOrder());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism(configuration0, true, 1849);
      configurationMechanism0.setId((-1L));
      long long0 = configurationMechanism0.getId();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism();
      configurationMechanism0.setId(2116L);
      long long0 = configurationMechanism0.getId();
      assertEquals(2116L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PULL;
      MockDate mockDate0 = new MockDate((-1919), 1222, 1222);
      Vector<ConfigurationMechanism> vector0 = new Vector<ConfigurationMechanism>();
      Vector<ConfigurationUserGroup> vector1 = new Vector<ConfigurationUserGroup>();
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration();
      ArrayList<Mechanism> arrayList0 = new ArrayList<Mechanism>();
      Configuration configuration0 = new Configuration("", triggerType0, mockDate0, mockDate0, vector0, vector1, (Application) null, generalConfiguration0, false, false, arrayList0);
      MechanismType mechanismType0 = MechanismType.RATING_TYPE;
      Mechanism mechanism0 = new Mechanism(mechanismType0, mockDate0, mockDate0, vector0, (List<Parameter>) null);
      mechanism0.setId((-1919));
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism(configuration0, mechanism0, true, (-599));
      configurationMechanism0.getMechanism();
      assertEquals((-599), configurationMechanism0.getOrder());
      assertTrue(configurationMechanism0.isActive());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism();
      Mechanism mechanism0 = new Mechanism();
      mechanism0.setId(15);
      configurationMechanism0.setMechanism(mechanism0);
      Mechanism mechanism1 = configurationMechanism0.getMechanism();
      assertNull(mechanism1.getType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MechanismType mechanismType0 = MechanismType.RATING_TYPE;
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      LinkedList<Parameter> linkedList1 = new LinkedList<Parameter>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, (Date) null, (Date) null, linkedList0, linkedList1);
      mechanism0.setOrder((-5984));
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism((Configuration) null, mechanism0, false, 0);
      configurationMechanism0.getMechanism();
      assertFalse(configurationMechanism0.isActive());
      assertEquals(0, configurationMechanism0.getOrder());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism();
      Mechanism mechanism0 = new Mechanism();
      mechanism0.setOrder(15);
      configurationMechanism0.setMechanism(mechanism0);
      Mechanism mechanism1 = configurationMechanism0.getMechanism();
      assertEquals(0L, mechanism1.getId());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Mechanism mechanism0 = new Mechanism();
      mechanism0.setActive(true);
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism((Configuration) null, mechanism0, false, (-110));
      configurationMechanism0.getMechanism();
      assertFalse(configurationMechanism0.isActive());
      assertEquals((-110), configurationMechanism0.getOrder());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism();
      Mechanism mechanism0 = configurationMechanism0.getMechanism();
      assertNull(mechanism0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism();
      configurationMechanism0.setOrder((-128));
      int int0 = configurationMechanism0.getOrder();
      assertEquals((-128), int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      MechanismType mechanismType0 = MechanismType.TEXT_TYPE;
      Mechanism mechanism0 = new Mechanism(mechanismType0, (List<ConfigurationMechanism>) null, (List<Parameter>) null);
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism(configuration0, mechanism0, false, 1165);
      int int0 = configurationMechanism0.getOrder();
      assertEquals(1165, int0);
      assertFalse(configurationMechanism0.isActive());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism(configuration0, false, 0);
      configurationMechanism0.onUpdate();
      configurationMechanism0.getUpdatedAt();
      assertEquals(0, configurationMechanism0.getOrder());
      assertFalse(configurationMechanism0.isActive());
  }
}
