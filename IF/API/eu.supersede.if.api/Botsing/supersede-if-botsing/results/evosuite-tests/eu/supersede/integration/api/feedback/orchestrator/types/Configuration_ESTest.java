/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 10:25:35 GMT 2019
 */

package eu.supersede.integration.api.feedback.orchestrator.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.google.common.base.Converter;
import com.google.common.base.Function;
import eu.supersede.integration.api.feedback.orchestrator.types.ApiUserPermission;
import eu.supersede.integration.api.feedback.orchestrator.types.Application;
import eu.supersede.integration.api.feedback.orchestrator.types.Configuration;
import eu.supersede.integration.api.feedback.orchestrator.types.ConfigurationMechanism;
import eu.supersede.integration.api.feedback.orchestrator.types.ConfigurationUserGroup;
import eu.supersede.integration.api.feedback.orchestrator.types.GeneralConfiguration;
import eu.supersede.integration.api.feedback.orchestrator.types.Mechanism;
import eu.supersede.integration.api.feedback.orchestrator.types.MechanismType;
import eu.supersede.integration.api.feedback.orchestrator.types.Parameter;
import eu.supersede.integration.api.feedback.orchestrator.types.TriggerType;
import eu.supersede.integration.api.feedback.orchestrator.types.User;
import eu.supersede.integration.api.feedback.orchestrator.types.UserGroup;
import java.time.Instant;
import java.time.chrono.JapaneseDate;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.mock.java.util.MockDate;

public class Configuration_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1), 0, (-1), (-1528), (-1528));
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Vector<ConfigurationUserGroup> vector0 = new Vector<ConfigurationUserGroup>();
      Stack<Parameter> stack0 = new Stack<Parameter>();
      TriggerType triggerType0 = TriggerType.PULL;
      MockDate mockDate1 = new MockDate((-423), (-1), 255, (-254), (-1852));
      Stack<Configuration> stack1 = new Stack<Configuration>();
      Application application0 = new Application("i", (-1669), mockDate0, mockDate0, stack1);
      TriggerType triggerType1 = TriggerType.PUSH;
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration();
      ArrayList<Mechanism> arrayList0 = new ArrayList<Mechanism>();
      Configuration configuration0 = new Configuration("Vo{t^hl", triggerType1, mockDate0, mockDate0, linkedList0, vector0, application0, generalConfiguration0, arrayList0);
      GeneralConfiguration generalConfiguration1 = new GeneralConfiguration("", mockDate0, (Date) null, stack0, application0, configuration0);
      Configuration configuration1 = new Configuration(" <`~fppEqHV5Zq*}X", triggerType0, (Date) null, mockDate1, linkedList0, vector0, application0, generalConfiguration1, false, false, arrayList0);
      configuration1.filterByLanguage((String) null, "");
      assertFalse(configuration1.isPushDefault());
      assertFalse(configuration1.isPullDefault());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PUSH;
      MockDate mockDate0 = new MockDate(3, (-247), 1);
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Stack<Configuration> stack0 = new Stack<Configuration>();
      Application application0 = new Application("=y7\"]0`kcs", 0, mockDate0, mockDate0, stack0);
      Application application1 = application0.filterByUserIdentification(".converterTo(");
      MechanismType mechanismType0 = MechanismType.AUDIO_TYPE;
      MockDate mockDate1 = new MockDate(0, 0, 0, (-1474), 3269);
      ArrayList<Parameter> arrayList0 = new ArrayList<Parameter>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, mockDate1, mockDate0, linkedList0, arrayList0);
      List<Parameter> list0 = mechanism0.parametersByLanguage("eg}|tncb|v\u0004W`a", "eg}|tncb|v\u0004W`a");
      TriggerType triggerType1 = TriggerType.PUSH;
      Configuration configuration0 = new Configuration("=y7\"]0`kcs", triggerType1, linkedList0, application0);
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration("=y7\"]0`kcs", mockDate0, mockDate0, list0, application1, configuration0);
      ArrayList<Mechanism> arrayList1 = new ArrayList<Mechanism>();
      Configuration configuration1 = new Configuration((String) null, triggerType0, mockDate0, mockDate0, linkedList0, (List<ConfigurationUserGroup>) null, application1, generalConfiguration0, arrayList1);
      ArrayList<UserGroup> arrayList2 = new ArrayList<UserGroup>();
      configuration1.setUserGroups(arrayList2);
      List<ConfigurationMechanism> list1 = configuration0.getConfigurationMechanisms();
      assertEquals(0, list1.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PULL;
      MockDate mockDate0 = new MockDate((-1386));
      mockDate0.clone();
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration();
      Stack<Configuration> stack0 = new Stack<Configuration>();
      Application application0 = new Application("", (-1386), mockDate0, mockDate0, generalConfiguration0, stack0);
      Configuration configuration0 = new Configuration("", triggerType0, (List<ConfigurationMechanism>) null, application0);
      TriggerType triggerType1 = TriggerType.PULL;
      configuration0.setType(triggerType1);
      configuration0.isPushDefault();
      configuration0.getId();
      boolean boolean0 = configuration0.containsUserWithUserIdentification("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PUSH;
      MockDate mockDate0 = new MockDate(0L);
      ArrayList<ConfigurationMechanism> arrayList0 = new ArrayList<ConfigurationMechanism>();
      ArrayDeque<ConfigurationUserGroup> arrayDeque0 = new ArrayDeque<ConfigurationUserGroup>();
      ArrayList<ConfigurationUserGroup> arrayList1 = new ArrayList<ConfigurationUserGroup>(arrayDeque0);
      MockDate mockDate1 = new MockDate();
      Stack<Parameter> stack0 = new Stack<Parameter>();
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration();
      ArrayList<Configuration> arrayList2 = new ArrayList<Configuration>();
      LinkedList<User> linkedList0 = new LinkedList<User>();
      Vector<UserGroup> vector0 = new Vector<UserGroup>();
      Application application0 = new Application((String) null, 0, mockDate1, mockDate1, generalConfiguration0, arrayList2, linkedList0, vector0);
      TriggerType triggerType1 = TriggerType.PUSH;
      Application application1 = new Application("eu.supersede.integration.api.feedback.orchestrator.types.Configuration", 0, mockDate0, mockDate0, arrayList2);
      ArrayList<Mechanism> arrayList3 = new ArrayList<Mechanism>();
      Configuration configuration0 = new Configuration("eu.supersede.integration.api.feedback.orchestrator.types.Configuration", triggerType1, mockDate1, mockDate1, arrayList0, arrayList1, application1, generalConfiguration0, false, false, arrayList3);
      GeneralConfiguration generalConfiguration1 = new GeneralConfiguration((String) null, mockDate1, mockDate0, stack0, application0, configuration0);
      Vector<Configuration> vector1 = new Vector<Configuration>();
      Application application2 = new Application((String) null, (-889), mockDate0, mockDate1, generalConfiguration1, vector1);
      Configuration configuration1 = new Configuration((String) null, triggerType0, mockDate0, mockDate0, arrayList0, arrayList1, application2, generalConfiguration1, arrayList3);
      configuration1.getApplication();
      assertFalse(configuration0.isPushDefault());
      assertFalse(configuration0.isPullDefault());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PULL;
      MockDate mockDate0 = new MockDate(0, 3, 3, 0, (-1), (-1788));
      Stack<ConfigurationMechanism> stack0 = new Stack<ConfigurationMechanism>();
      Vector<User> vector0 = new Vector<User>();
      Application application0 = new Application("xS4)-cvPar==LoRx<>p", 63, mockDate0, mockDate0, (GeneralConfiguration) null, (List<Configuration>) null, vector0);
      Configuration configuration0 = new Configuration("xS4)-cvPar==LoRx<>p", triggerType0, mockDate0, mockDate0, stack0, (List<ConfigurationUserGroup>) null, application0, (GeneralConfiguration) null, (ArrayList<Mechanism>) null);
      boolean boolean0 = configuration0.isPullDefault();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PUSH;
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      MockDate mockDate0 = new MockDate(445, (-748), 0);
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration();
      Vector<Configuration> vector0 = new Vector<Configuration>();
      ArrayList<User> arrayList0 = new ArrayList<User>();
      TriggerType triggerType1 = TriggerType.PULL;
      ArrayList<ConfigurationMechanism> arrayList1 = new ArrayList<ConfigurationMechanism>(linkedList0);
      ArrayList<ConfigurationUserGroup> arrayList2 = new ArrayList<ConfigurationUserGroup>();
      Application application0 = new Application("RU96\"M~L\"-jncjy.2@", 445, (Date) null, (Date) null, generalConfiguration0, vector0, arrayList0);
      ArrayList<Mechanism> arrayList3 = new ArrayList<Mechanism>();
      Configuration configuration0 = new Configuration("RU96\"M~L\"-jncjy.2@", triggerType1, (Date) null, (Date) null, arrayList1, arrayList2, application0, generalConfiguration0, arrayList3);
      List<UserGroup> list0 = configuration0.getUserGroups();
      Stack<ApiUserPermission> stack0 = new Stack<ApiUserPermission>();
      Application application1 = new Application("RU96\"M~L\"-jncjy.2@", 445, mockDate0, mockDate0, generalConfiguration0, vector0, arrayList0, list0, stack0);
      Application application2 = application1.filterByUserIdentification("IGNORE_TYPE_VARIABLE_OR_WILDCARD");
      Configuration configuration1 = new Configuration("RU96\"M~L\"-jncjy.2@", triggerType0, linkedList0, application2);
      String string0 = configuration1.toString();
      assertEquals("Configuration[id=0, name='RU96\"M~L\"-jncjy.2@', type='PUSH', mechanisms='']", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      ArrayList<UserGroup> arrayList0 = new ArrayList<UserGroup>();
      UserGroup userGroup0 = new UserGroup();
      arrayList0.add(userGroup0);
      configuration0.setUserGroups(arrayList0);
      assertTrue(arrayList0.contains(userGroup0));
      
      boolean boolean0 = configuration0.containsUserWithUserIdentification("i");
      boolean boolean1 = configuration0.containsUserGroupWithId(0L);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, (-3993), (-1528));
      Application application0 = new Application("}.`@", (-1), mockDate0, mockDate0, (List<Configuration>) null);
      String string0 = "";
      TriggerType triggerType0 = TriggerType.PULL;
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Configuration configuration0 = new Configuration("", triggerType0, linkedList0, application0);
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism(configuration0, true, 594);
      linkedList0.add(configurationMechanism0);
      // Undeclared exception!
      try { 
        configuration0.filterByLanguage("\")", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PUSH;
      MockDate mockDate0 = new MockDate(0, (-1215), (-2615));
      MockDate mockDate1 = new MockDate();
      LinkedList<Configuration> linkedList0 = new LinkedList<Configuration>();
      Stack<User> stack0 = new Stack<User>();
      Application application0 = new Application("0i=S4cYv$JryCU!", 0, mockDate1, mockDate0, (GeneralConfiguration) null, linkedList0, stack0);
      Configuration configuration0 = new Configuration("^l$d* t8nfh8E", triggerType0, (List<ConfigurationMechanism>) null, application0);
      configuration0.getConfigurationUserGroups();
      Stack<UserGroup> stack1 = new Stack<UserGroup>();
      Application application1 = new Application((String) null, 3322, mockDate0, mockDate0, (GeneralConfiguration) null, linkedList0, stack0, stack1);
      ArrayList<Mechanism> arrayList0 = new ArrayList<Mechanism>();
      Configuration configuration1 = new Configuration("^l$d* t8nfh8E", triggerType0, mockDate0, mockDate0, (List<ConfigurationMechanism>) null, (List<ConfigurationUserGroup>) null, application1, (GeneralConfiguration) null, true, true, arrayList0);
      configuration1.setApplication(application0);
      boolean boolean0 = configuration0.isPushDefault();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      MockDate mockDate0 = new MockDate();
      configuration0.setUpdatedAt(mockDate0);
      List<Mechanism> list0 = configuration0.getMechanisms();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PULL;
      MockDate mockDate0 = new MockDate((-1), (-1), (-1), 1038, 952);
      Configuration configuration0 = new Configuration();
      configuration0.getConfigurationMechanisms();
      configuration0.getConfigurationUserGroups();
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration();
      Vector<Configuration> vector0 = new Vector<Configuration>();
      Stack<ApiUserPermission> stack0 = new Stack<ApiUserPermission>();
      Application application0 = new Application("g=eVPy`RTbb2N*.,#}y", (-1), mockDate0, mockDate0, generalConfiguration0, vector0, (List<User>) null, (List<UserGroup>) null, stack0);
      ArrayList<Mechanism> arrayList0 = new ArrayList<Mechanism>();
      Configuration configuration1 = new Configuration(";NBA^", triggerType0, mockDate0, mockDate0, (List<ConfigurationMechanism>) null, (List<ConfigurationUserGroup>) null, application0, generalConfiguration0, true, true, arrayList0);
      Date date0 = configuration1.getUpdatedAt();
      configuration1.onUpdate();
      configuration1.getUserGroups();
      ApiUserPermission apiUserPermission0 = mock(ApiUserPermission.class, new ViolatedAssumptionAnswer());
      stack0.add(apiUserPermission0);
      configuration1.getMechanisms();
      configuration0.setUpdatedAt(date0);
      configuration1.getType();
      assertTrue(configuration1.isPushDefault());
      assertTrue(configuration1.isPullDefault());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      GeneralConfiguration generalConfiguration0 = configuration0.getGeneralConfiguration();
      assertNull(generalConfiguration0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      boolean boolean0 = configuration0.containsUserWithUserIdentification("[");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      long long0 = configuration0.getId();
      assertEquals(0L, long0);
      
      String string0 = "Z< 4!$J";
      int int0 = 1896;
      int int1 = 0;
      Application application0 = new Application();
      // Undeclared exception!
      try { 
        application0.filterByUserIdentification("Z< 4!$J");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PUSH;
      MockDate mockDate0 = new MockDate(5013L);
      MechanismType mechanismType0 = MechanismType.INFO_TYPE;
      Stack<ConfigurationMechanism> stack0 = new Stack<ConfigurationMechanism>();
      LinkedList<Parameter> linkedList0 = new LinkedList<Parameter>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, stack0, linkedList0);
      List<Parameter> list0 = mechanism0.parametersByLanguage(", ", "");
      Mechanism mechanism1 = new Mechanism(mechanismType0, mockDate0, mockDate0, stack0, list0);
      List<ConfigurationMechanism> list1 = mechanism1.getConfigurationMechanisms();
      ArrayList<ConfigurationUserGroup> arrayList0 = new ArrayList<ConfigurationUserGroup>();
      MockDate mockDate1 = new MockDate(1480, 1480, 92);
      Vector<Configuration> vector0 = new Vector<Configuration>();
      Stack<User> stack1 = new Stack<User>();
      Stack<UserGroup> stack2 = new Stack<UserGroup>();
      String[] stringArray0 = new String[5];
      stringArray0[0] = ", ";
      stringArray0[1] = "";
      stringArray0[2] = ", ";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stack2.toArray(stringArray0);
      Application application0 = new Application("", 1480, mockDate0, mockDate1, (GeneralConfiguration) null, vector0, stack1, stack2);
      Configuration configuration0 = new Configuration("UBJ5.;,O[", triggerType0, mockDate0, mockDate0, stack0, application0);
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration("", mockDate0, mockDate0, list0, application0, configuration0);
      Application application1 = new Application("", 1480, mockDate1, mockDate0, generalConfiguration0, vector0);
      ArrayList<Mechanism> arrayList1 = new ArrayList<Mechanism>();
      Configuration configuration1 = new Configuration(", ", triggerType0, mockDate0, mockDate0, list1, arrayList0, application1, (GeneralConfiguration) null, arrayList1);
      configuration1.getApplication();
      configuration0.onUpdate();
      configuration1.setPushDefault(true);
      assertTrue(configuration1.isPushDefault());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      List<UserGroup> list0 = configuration0.getUserGroups();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      ArrayList<UserGroup> arrayList0 = new ArrayList<UserGroup>();
      configuration0.setUserGroups(arrayList0);
      assertNull(configuration0.getName());
      
      configuration0.getType();
      configuration0.isPushDefault();
      ArrayList<UserGroup> arrayList1 = new ArrayList<UserGroup>();
      configuration0.setUserGroups(arrayList0);
      configuration0.setUserGroups(arrayList0);
      assertNull(configuration0.getName());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      boolean boolean0 = configuration0.containsUserGroupWithId(0L);
      assertFalse(boolean0);
      
      configuration0.setId(1L);
      configuration0.onUpdate();
      configuration0.toString();
      ArrayList<ConfigurationMechanism> arrayList0 = new ArrayList<ConfigurationMechanism>();
      MechanismType mechanismType0 = MechanismType.TEXT_TYPE;
      LinkedList<Parameter> linkedList0 = new LinkedList<Parameter>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, (Date) null, (Date) null, arrayList0, linkedList0);
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism(configuration0, mechanism0, false, (-448), (Date) null, (Date) null);
      arrayList0.add(configurationMechanism0);
      MockDate mockDate0 = new MockDate(0, 3, 3);
      ConfigurationMechanism configurationMechanism1 = new ConfigurationMechanism(configuration0, (Mechanism) null, false, 0, mockDate0, mockDate0);
      configurationMechanism1.setMechanism(mechanism0);
      arrayList0.add(configurationMechanism1);
      configuration0.setConfigurationMechanisms(arrayList0);
      configuration0.setConfigurationMechanisms(arrayList0);
      // Undeclared exception!
      try { 
        configuration0.setUserGroups((ArrayList<UserGroup>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PUSH;
      MockDate mockDate0 = new MockDate();
      Stack<ConfigurationMechanism> stack0 = new Stack<ConfigurationMechanism>();
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration();
      ArrayList<Configuration> arrayList0 = new ArrayList<Configuration>();
      Instant instant0 = mockDate0.toInstant();
      generalConfiguration0.filterByLanguage("h]*ldcO5IhpLtG", "h]*ldcO5IhpLtG");
      TriggerType triggerType1 = TriggerType.PULL;
      Date date0 = Date.from(instant0);
      Mechanism mechanism0 = new Mechanism();
      mechanism0.getConfigurationMechanisms();
      Vector<UserGroup> vector0 = new Vector<UserGroup>();
      LinkedList<ApiUserPermission> linkedList0 = new LinkedList<ApiUserPermission>();
      Application application0 = new Application("eu.supersede.integration.api.feedback.orchestrator.types.Configuration", 1, date0, mockDate0, generalConfiguration0, arrayList0, (List<User>) null, vector0, linkedList0);
      Configuration configuration0 = new Configuration("", triggerType1, date0, mockDate0, (List<ConfigurationMechanism>) null, application0);
      arrayList0.add(configuration0);
      Application application1 = new Application("", 3413, mockDate0, (Date) null, generalConfiguration0, arrayList0, (List<User>) null);
      Configuration configuration1 = new Configuration("", triggerType0, mockDate0, mockDate0, stack0, application1);
      String string0 = configuration1.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      Stack<Mechanism> stack0 = new Stack<Mechanism>();
      MechanismType mechanismType0 = MechanismType.CATEGORY_TYPE;
      ArrayList<ConfigurationMechanism> arrayList0 = new ArrayList<ConfigurationMechanism>();
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration();
      generalConfiguration0.getParameters();
      Mechanism mechanism0 = new Mechanism(mechanismType0, arrayList0, (List<Parameter>) null);
      stack0.add(mechanism0);
      configuration0.setMechanisms(stack0);
      boolean boolean0 = configuration0.containsUserWithUserIdentification("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.setName(" r");
      List<ConfigurationMechanism> list0 = configuration0.getConfigurationMechanisms();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.setPushDefault(false);
      configuration0.setName("");
      boolean boolean0 = configuration0.containsUserGroupWithId((-817L));
      assertFalse(boolean0);
      
      MockDate mockDate0 = new MockDate();
      mockDate0.getTime();
      configuration0.setUpdatedAt(mockDate0);
      configuration0.filterByLanguage("", "");
      configuration0.getCreatedAt();
      configuration0.isPullDefault();
      MechanismType mechanismType0 = MechanismType.AUDIO_TYPE;
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Stack<Parameter> stack0 = new Stack<Parameter>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, linkedList0, stack0);
      List<ConfigurationMechanism> list0 = mechanism0.getConfigurationMechanisms();
      LinkedList<ConfigurationMechanism> linkedList1 = new LinkedList<ConfigurationMechanism>(list0);
      configuration0.setConfigurationMechanisms(linkedList1);
      assertFalse(configuration0.isPushDefault());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      // Undeclared exception!
      try { 
        configuration0.setMechanisms((List<Mechanism>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      ArrayList<UserGroup> arrayList0 = new ArrayList<UserGroup>();
      configuration0.setUserGroups(arrayList0);
      configuration0.filterByLanguage("i", "i");
      configuration0.getName();
      List<Mechanism> list0 = configuration0.getMechanisms();
      configuration0.setMechanisms(list0);
      assertEquals(0L, configuration0.getId());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      // Undeclared exception!
      try { 
        configuration0.setUserGroups((ArrayList<UserGroup>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      TriggerType triggerType0 = TriggerType.PULL;
      configuration0.setType(triggerType0);
      assertEquals(0L, configuration0.getId());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PUSH;
      Vector<ConfigurationMechanism> vector0 = new Vector<ConfigurationMechanism>();
      MockDate mockDate0 = new MockDate((-339), 2, 0, (-367), (-339));
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration();
      Stack<Configuration> stack0 = new Stack<Configuration>();
      Application application0 = new Application("gKurpW%(M2eJSQ2cV", (-339), mockDate0, mockDate0, generalConfiguration0, stack0);
      Configuration configuration0 = new Configuration("com.google.common.base.Converter$IdentityConverter", triggerType0, vector0, application0);
      configuration0.getUserGroups();
      List<ConfigurationMechanism> list0 = configuration0.getConfigurationMechanisms();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      List<ConfigurationUserGroup> list0 = configuration0.getConfigurationUserGroups();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.setPullDefault(true);
      assertTrue(configuration0.isPullDefault());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      List<ConfigurationMechanism> list0 = configuration0.getConfigurationMechanisms();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1), 0, (-1), (-1528), (-1528));
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      TriggerType triggerType0 = TriggerType.PUSH;
      Vector<ConfigurationUserGroup> vector0 = new Vector<ConfigurationUserGroup>();
      Stack<Parameter> stack0 = new Stack<Parameter>();
      ArrayList<Configuration> arrayList0 = new ArrayList<Configuration>(0);
      Application application0 = new Application(" <`~fppEqHV5Zq*}X", (-423), (Date) null, (Date) null, arrayList0);
      TriggerType triggerType1 = TriggerType.PULL;
      Configuration configuration0 = new Configuration(" <`~fppEqHV5Zq*}X", triggerType1, linkedList0, application0);
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration("i", (Date) null, mockDate0, stack0, application0, configuration0);
      Application application1 = new Application((String) null, (-254), (Date) null, mockDate0, generalConfiguration0, arrayList0);
      ArrayList<Mechanism> arrayList1 = new ArrayList<Mechanism>();
      Configuration configuration1 = new Configuration("i", triggerType0, (Date) null, (Date) null, linkedList0, vector0, application1, generalConfiguration0, false, false, arrayList1);
      configuration1.filterByLanguage((String) null, (String) null);
      assertFalse(configuration1.isPushDefault());
      assertFalse(configuration1.isPullDefault());
      
      configuration1.getGeneralConfiguration();
      assertFalse(configuration1.isPullDefault());
      assertFalse(configuration1.isPushDefault());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.setPushDefault(false);
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      configuration0.setPushDefault(true);
      ArrayList<Mechanism> arrayList0 = new ArrayList<Mechanism>();
      configuration0.setMechanisms(arrayList0);
      configuration0.onCreate();
      configuration0.setName((String) null);
      configuration0.onUpdate();
      configuration0.getGeneralConfiguration();
      Vector<ConfigurationUserGroup> vector0 = new Vector<ConfigurationUserGroup>();
      configuration0.setConfigurationUserGroups(vector0);
      configuration0.isPushDefault();
      ArrayList<ConfigurationUserGroup> arrayList1 = new ArrayList<ConfigurationUserGroup>();
      configuration0.setConfigurationUserGroups(arrayList1);
      configuration0.isPushDefault();
      configuration0.getConfigurationUserGroups();
      configuration0.getMechanisms();
      configuration0.isPushDefault();
      TriggerType triggerType0 = TriggerType.PULL;
      configuration0.setType(triggerType0);
      System.setCurrentTimeMillis(0);
      configuration0.getGeneralConfiguration();
      assertTrue(configuration0.isPushDefault());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      ArrayList<UserGroup> arrayList0 = new ArrayList<UserGroup>();
      configuration0.setUserGroups(arrayList0);
      List<UserGroup> list0 = configuration0.getUserGroups();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.getName();
      List<Mechanism> list0 = configuration0.getMechanisms();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PULL;
      Stack<ConfigurationMechanism> stack0 = new Stack<ConfigurationMechanism>();
      Application application0 = new Application();
      Configuration configuration0 = new Configuration((String) null, triggerType0, stack0, application0);
      Stack<Mechanism> stack1 = new Stack<Mechanism>();
      configuration0.setMechanisms(stack1);
      String string0 = configuration0.toString();
      assertEquals("Configuration[id=0, name='null', type='PULL', mechanisms='']", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PUSH;
      MockDate mockDate0 = new MockDate(6706, 0, 0, Integer.MAX_VALUE, 6706);
      Stack<Parameter> stack0 = new Stack<Parameter>();
      MockDate mockDate1 = new MockDate(Integer.MAX_VALUE, 0, (-15), (-15), 3);
      mockDate0.before(mockDate1);
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration("#!<^;FQ5nhM", mockDate0, mockDate0, stack0, (Application) null, (Configuration) null);
      Vector<Configuration> vector0 = new Vector<Configuration>();
      Application application0 = new Application("%yz", 0, mockDate0, mockDate0, generalConfiguration0, vector0);
      Configuration configuration0 = new Configuration("Ty42+,+?PVf", triggerType0, mockDate0, mockDate0, (List<ConfigurationMechanism>) null, application0);
      mockDate0.getTime();
      configuration0.getMechanisms();
      configuration0.getMechanisms();
      configuration0.setConfigurationMechanisms((List<ConfigurationMechanism>) null);
      configuration0.setPushDefault(false);
      configuration0.filterByLanguage("a%l*!z,\"L", "Tuy>KyXy.ao_sC|g");
      String string0 = configuration0.toString();
      assertEquals("Configuration[id=0, name='Ty42+,+?PVf', type='PUSH', mechanisms='']", string0);
      
      configuration0.getApplication();
      assertFalse(configuration0.isPushDefault());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.getUpdatedAt();
      configuration0.setPullDefault(false);
      List<Mechanism> list0 = null;
      // Undeclared exception!
      try { 
        configuration0.setMechanisms((List<Mechanism>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      ArrayList<UserGroup> arrayList0 = new ArrayList<UserGroup>();
      configuration0.getMechanisms();
      configuration0.setUserGroups(arrayList0);
      boolean boolean0 = configuration0.isPushDefault();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.setId((-19L));
      boolean boolean0 = configuration0.containsUserGroupWithId((-19L));
      assertEquals((-19L), configuration0.getId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      String string0 = configuration0.toString();
      assertEquals("Configuration[id=0, name='null', type='null', mechanisms='']", string0);
      
      configuration0.setId((-1702L));
      configuration0.setPushDefault(true);
      configuration0.setPullDefault(false);
      configuration0.getConfigurationMechanisms();
      configuration0.toString();
      configuration0.containsUserWithUserIdentification("14,$Lv mIM");
      configuration0.onUpdate();
      configuration0.containsUserGroupWithId(1L);
      configuration0.getId();
      configuration0.setId((-1702L));
      configuration0.isPullDefault();
      configuration0.getConfigurationUserGroups();
      configuration0.setConfigurationMechanisms((List<ConfigurationMechanism>) null);
      configuration0.getMechanisms();
      configuration0.getMechanisms();
      configuration0.getUserGroups();
      configuration0.getApplication();
      configuration0.getGeneralConfiguration();
      configuration0.getUserGroups();
      configuration0.isPullDefault();
      configuration0.getGeneralConfiguration();
      configuration0.getId();
      configuration0.getUserGroups();
      assertEquals((-1702L), configuration0.getId());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PULL;
      MechanismType mechanismType0 = MechanismType.RATING_TYPE;
      TreeSet<ConfigurationMechanism> treeSet0 = new TreeSet<ConfigurationMechanism>();
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>(treeSet0);
      Mechanism mechanism0 = new Mechanism();
      mechanism0.getParameters();
      Mechanism mechanism1 = new Mechanism(mechanismType0, linkedList0, (List<Parameter>) null);
      List<ConfigurationMechanism> list0 = mechanism1.getConfigurationMechanisms();
      Stack<Configuration> stack0 = new Stack<Configuration>();
      Application application0 = new Application(";%0;XIZ^Fy~", (-2735), (Date) null, (Date) null, stack0);
      Application application1 = application0.filterForAnonymousUser();
      Configuration configuration0 = new Configuration(";%0;XIZ^Fy~", triggerType0, list0, application1);
      List<Mechanism> list1 = configuration0.getMechanisms();
      LinkedList<UserGroup> linkedList1 = new LinkedList<UserGroup>();
      UserGroup userGroup0 = new UserGroup();
      userGroup0.setActive(true);
      linkedList1.add(userGroup0);
      application0.setUserGroups(linkedList1);
      mechanism0.onUpdate();
      configuration0.setMechanisms(list1);
      mechanism1.setUpdatedAt((Date) null);
      configuration0.getName();
      configuration0.getId();
      configuration0.getConfigurationUserGroups();
      configuration0.getId();
      configuration0.containsUserWithUserIdentification("");
      configuration0.containsUserWithUserIdentification(";%0;XIZ^Fy~");
      configuration0.getUserGroups();
      mechanism1.toString();
      configuration0.toString();
      configuration0.getUserGroups();
      configuration0.getConfigurationMechanisms();
      configuration0.setMechanisms(list1);
      assertTrue(list1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.onCreate();
      boolean boolean0 = configuration0.isPullDefault();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.setPushDefault(false);
      ArrayList<UserGroup> arrayList0 = new ArrayList<UserGroup>();
      UserGroup userGroup0 = new UserGroup();
      arrayList0.add(userGroup0);
      configuration0.setUserGroups(arrayList0);
      configuration0.setUserGroups(arrayList0);
      assertFalse(configuration0.isPushDefault());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      Vector<Mechanism> vector0 = new Vector<Mechanism>();
      configuration0.setMechanisms(vector0);
      boolean boolean0 = configuration0.isPullDefault();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PUSH;
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Instant instant0 = MockInstant.ofEpochMilli((-228));
      Date date0 = Date.from(instant0);
      Application application0 = new Application("G{2P}J7cBV_i83,RDP", (-228), date0, date0, (List<Configuration>) null);
      Configuration configuration0 = new Configuration("1S8fNYcj'", triggerType0, linkedList0, application0);
      configuration0.filterByLanguage("1S8fNYcj'", "1S8fNYcj'");
      boolean boolean0 = configuration0.containsUserWithUserIdentification("(po78TKu");
      assertFalse(boolean0);
      
      configuration0.getType();
      boolean boolean1 = configuration0.isPushDefault();
      assertTrue(boolean1 == boolean0);
      
      ArrayList<UserGroup> arrayList0 = new ArrayList<UserGroup>();
      configuration0.setUserGroups(arrayList0);
      configuration0.setUserGroups(arrayList0);
      assertEquals("1S8fNYcj'", configuration0.getName());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      ArrayList<Mechanism> arrayList0 = new ArrayList<Mechanism>();
      MechanismType mechanismType0 = MechanismType.RATING_TYPE;
      MockDate mockDate0 = new MockDate((-1089), (-1089), 1179, (-3173), (-1671), (-1089));
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Mechanism mechanism0 = new Mechanism(mechanismType0, mockDate0, mockDate0, linkedList0, (List<Parameter>) null);
      mechanism0.filterByLanguage("Q=", "Q=");
      mechanism0.setCreatedAt(mockDate0);
      arrayList0.add(mechanism0);
      configuration0.setMechanisms(arrayList0);
      configuration0.onCreate();
      configuration0.setName((String) null);
      configuration0.onUpdate();
      configuration0.getGeneralConfiguration();
      Vector<ConfigurationUserGroup> vector0 = new Vector<ConfigurationUserGroup>();
      configuration0.setConfigurationUserGroups(vector0);
      configuration0.isPushDefault();
      ArrayList<ConfigurationUserGroup> arrayList1 = new ArrayList<ConfigurationUserGroup>();
      configuration0.setConfigurationUserGroups(arrayList1);
      configuration0.toString();
      configuration0.isPushDefault();
      configuration0.getUpdatedAt();
      configuration0.getConfigurationUserGroups();
      configuration0.getMechanisms();
      configuration0.isPushDefault();
      TriggerType triggerType0 = TriggerType.PUSH;
      configuration0.setType(triggerType0);
      assertNull(configuration0.getName());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PUSH;
      MockDate mockDate0 = new MockDate((-1783L));
      Vector<ConfigurationMechanism> vector0 = new Vector<ConfigurationMechanism>();
      Configuration configuration0 = new Configuration("", triggerType0, (Date) null, mockDate0, vector0, (Application) null);
      Mechanism mechanism0 = new Mechanism();
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism(configuration0, mechanism0, false, 8199);
      vector0.add(configurationMechanism0);
      configuration0.setPullDefault(false);
      configuration0.getId();
      String string0 = configuration0.toString();
      assertEquals("Configuration[id=0, name='', type='PUSH', mechanisms='Mechanism[id=0, type='null', parameters=[]]']", string0);
      
      configuration0.getUserGroups();
      configuration0.getConfigurationMechanisms();
      configuration0.filterByLanguage("", "");
      assertFalse(configuration0.isPullDefault());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PULL;
      Stack<ConfigurationMechanism> stack0 = new Stack<ConfigurationMechanism>();
      Configuration configuration0 = new Configuration("u>mZCg*s", triggerType0, (Date) null, (Date) null, stack0, (Application) null);
      List<ConfigurationUserGroup> list0 = configuration0.getConfigurationUserGroups();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      long long0 = 1723L;
      System.setCurrentTimeMillis(1723L);
      Configuration configuration0 = new Configuration();
      configuration0.containsUserGroupWithId(1723L);
      List<Mechanism> list0 = configuration0.getMechanisms();
      ArrayList<ConfigurationUserGroup> arrayList0 = new ArrayList<ConfigurationUserGroup>();
      MockDate mockDate0 = new MockDate(1094, 1094, 1094, 1094, 1094);
      ConfigurationUserGroup configurationUserGroup0 = new ConfigurationUserGroup(configuration0, (UserGroup) null, false);
      arrayList0.add(configurationUserGroup0);
      configuration0.setConfigurationUserGroups(arrayList0);
      configuration0.setMechanisms(list0);
      configuration0.getGeneralConfiguration();
      // Undeclared exception!
      try { 
        configuration0.containsUserGroupWithId(1723L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.setConfigurationUserGroups((List<ConfigurationUserGroup>) null);
      long long0 = configuration0.getId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.filterByLanguage("(t9", "(t9");
      assertNull(configuration0.getName());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      ArrayList<ConfigurationMechanism> arrayList0 = new ArrayList<ConfigurationMechanism>();
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism();
      MockDate mockDate0 = new MockDate(1, 1, 3008, 1715, 1, 1715);
      configurationMechanism0.setCreatedAt(mockDate0);
      arrayList0.add(configurationMechanism0);
      configuration0.setConfigurationMechanisms(arrayList0);
      configuration0.getConfigurationMechanisms();
      // Undeclared exception!
      try { 
        configuration0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      Configuration configuration1 = new Configuration();
      configuration1.getConfigurationMechanisms();
      configuration0.setConfigurationMechanisms((List<ConfigurationMechanism>) null);
      configuration1.onCreate();
      configuration0.getConfigurationMechanisms();
      configuration1.setPullDefault(true);
      assertTrue(configuration1.isPullDefault());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PUSH;
      MockDate mockDate0 = new MockDate(6706, 0, 0, Integer.MAX_VALUE, 6706);
      Stack<Parameter> stack0 = new Stack<Parameter>();
      MockDate mockDate1 = new MockDate(Integer.MAX_VALUE, 0, (-15), (-15), 3);
      mockDate0.before(mockDate1);
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration("Ty42+,+?PVf", mockDate0, mockDate0, stack0, (Application) null, (Configuration) null);
      Vector<Configuration> vector0 = new Vector<Configuration>();
      Application application0 = new Application("%yz", 0, mockDate0, mockDate0, generalConfiguration0, vector0);
      Configuration configuration0 = new Configuration("Ty42+,+?PVf", triggerType0, mockDate0, mockDate0, (List<ConfigurationMechanism>) null, application0);
      mockDate0.getTime();
      configuration0.getMechanisms();
      configuration0.getMechanisms();
      configuration0.setConfigurationMechanisms((List<ConfigurationMechanism>) null);
      application0.setId(7940353358760000L);
      configuration0.setPushDefault(false);
      configuration0.filterByLanguage("a%l*!z,\"L", "Tuy>KyXy.ao_sC|g");
      String string0 = configuration0.toString();
      assertEquals("Configuration[id=0, name='Ty42+,+?PVf', type='PUSH', mechanisms='']", string0);
      
      configuration0.getApplication();
      assertFalse(configuration0.isPushDefault());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PULL;
      Stack<ConfigurationMechanism> stack0 = new Stack<ConfigurationMechanism>();
      Application application0 = new Application();
      Configuration configuration0 = new Configuration((String) null, triggerType0, stack0, application0);
      List<ConfigurationUserGroup> list0 = configuration0.getConfigurationUserGroups();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      ArrayList<ConfigurationMechanism> arrayList0 = new ArrayList<ConfigurationMechanism>();
      configuration0.setConfigurationMechanisms(arrayList0);
      List<ConfigurationMechanism> list0 = configuration0.getConfigurationMechanisms();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.toString();
      MockDate mockDate0 = new MockDate(9223372036854775807L);
      configuration0.setCreatedAt(mockDate0);
      MockDate mockDate1 = new MockDate(1659, 0, (-11), 0, 0, 0);
      configuration0.setCreatedAt(mockDate1);
      configuration0.onUpdate();
      configuration0.getCreatedAt();
      configuration0.onUpdate();
      configuration0.filterByLanguage("Configuration[id=0, name='null', type='null', mechanisms='']", "VHDb@i~nDT'j&m[i");
      configuration0.setId((-6180L));
      Stack<ConfigurationUserGroup> stack0 = new Stack<ConfigurationUserGroup>();
      configuration0.setConfigurationUserGroups(stack0);
      configuration0.getConfigurationUserGroups();
      configuration0.getConfigurationUserGroups();
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration();
      Stack<Configuration> stack1 = new Stack<Configuration>();
      Application application0 = new Application((String) null, 1073741823, mockDate0, mockDate1, generalConfiguration0, stack1);
      Configuration configuration1 = new Configuration();
      GeneralConfiguration generalConfiguration1 = new GeneralConfiguration("eu.supersede.integration.api.feedback.orchestrator.types.Configuration", mockDate0, mockDate1, (List<Parameter>) null, application0, configuration1);
      configuration0.setGeneralConfiguration(generalConfiguration1);
      assertEquals((-6180L), configuration0.getId());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      MockDate mockDate0 = new MockDate();
      configuration0.setCreatedAt(mockDate0);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String string0 = "L?";
      TriggerType triggerType0 = TriggerType.PULL;
      int int0 = 67;
      MockDate mockDate0 = new MockDate(4439, 0, 343, 451, 4, 67);
      ArrayList<ConfigurationMechanism> arrayList0 = new ArrayList<ConfigurationMechanism>(1073741824);
      Vector<ConfigurationMechanism> vector0 = new Vector<ConfigurationMechanism>(arrayList0);
      Vector<ConfigurationUserGroup> vector1 = new Vector<ConfigurationUserGroup>();
      LinkedList<Configuration> linkedList0 = new LinkedList<Configuration>();
      Application application0 = new Application(string0, int0, mockDate0, mockDate0, linkedList0);
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration();
      boolean boolean0 = false;
      boolean boolean1 = false;
      ArrayList<Mechanism> arrayList1 = new ArrayList<Mechanism>();
      ConfigurationUserGroup configurationUserGroup0 = null;
      vector1.add(configurationUserGroup0);
      Configuration configuration0 = new Configuration(string0, triggerType0, mockDate0, mockDate0, vector0, vector1, application0, generalConfiguration0, boolean0, boolean1, arrayList1);
      configuration0.getUserGroups();
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      System.setCurrentTimeMillis((-1375L));
      Configuration configuration0 = new Configuration();
      configuration0.getConfigurationUserGroups();
      configuration0.onCreate();
      configuration0.setApplication((Application) null);
      configuration0.setConfigurationUserGroups((List<ConfigurationUserGroup>) null);
      configuration0.setPullDefault(true);
      configuration0.isPullDefault();
      configuration0.getConfigurationUserGroups();
      configuration0.toString();
      assertTrue(configuration0.isPullDefault());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, (-3993), (-1528));
      Application application0 = new Application("}.`@", (-1), mockDate0, mockDate0, (List<Configuration>) null);
      TriggerType triggerType0 = TriggerType.PULL;
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Configuration configuration0 = new Configuration("", triggerType0, linkedList0, application0);
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration();
      generalConfiguration0.getParameters();
      GeneralConfiguration generalConfiguration1 = new GeneralConfiguration("}.`@", mockDate0, mockDate0, (List<Parameter>) null, application0, configuration0);
      configuration0.setGeneralConfiguration(generalConfiguration1);
      configuration0.filterByLanguage("\")", "");
      boolean boolean0 = configuration0.containsUserGroupWithId((-519L));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PUSH;
      MockDate mockDate0 = new MockDate();
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      ArrayList<ConfigurationUserGroup> arrayList0 = new ArrayList<ConfigurationUserGroup>();
      Application application0 = new Application();
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration();
      ArrayList<Mechanism> arrayList1 = new ArrayList<Mechanism>();
      Configuration configuration0 = new Configuration("", triggerType0, mockDate0, mockDate0, linkedList0, arrayList0, application0, generalConfiguration0, arrayList1);
      Application application1 = configuration0.getApplication();
      assertNull(application1.getName());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = "com.google.common.collect.ForwardingObject";
      TriggerType triggerType0 = TriggerType.PUSH;
      Stack<ConfigurationMechanism> stack0 = new Stack<ConfigurationMechanism>();
      Configuration configuration0 = new Configuration("com.google.common.collect.ForwardingObject", triggerType0, stack0, (Application) null);
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism();
      stack0.add(configurationMechanism0);
      // Undeclared exception!
      try { 
        configuration0.getMechanisms();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PUSH;
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Vector<ConfigurationUserGroup> vector0 = new Vector<ConfigurationUserGroup>();
      ArrayList<Mechanism> arrayList0 = new ArrayList<Mechanism>();
      Configuration configuration0 = new Configuration("", triggerType0, (Date) null, (Date) null, linkedList0, vector0, (Application) null, (GeneralConfiguration) null, true, true, arrayList0);
      String string0 = configuration0.toString();
      assertTrue(configuration0.isPullDefault());
      assertEquals("Configuration[id=0, name='', type='PUSH', mechanisms='']", string0);
      assertTrue(configuration0.isPushDefault());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.filterByLanguage("", "");
      configuration0.getCreatedAt();
      configuration0.isPullDefault();
      LinkedList<ConfigurationMechanism> linkedList0 = new LinkedList<ConfigurationMechanism>();
      Stack<Parameter> stack0 = new Stack<Parameter>();
      MechanismType mechanismType0 = MechanismType.INFO_TYPE;
      Mechanism mechanism0 = new Mechanism(mechanismType0, linkedList0, stack0);
      List<ConfigurationMechanism> list0 = mechanism0.getConfigurationMechanisms();
      LinkedList<ConfigurationMechanism> linkedList1 = new LinkedList<ConfigurationMechanism>(list0);
      configuration0.setConfigurationMechanisms(linkedList0);
      assertNull(configuration0.getName());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.setId(2646L);
      configuration0.containsUserGroupWithId(3496L);
      configuration0.getId();
      configuration0.toString();
      assertEquals(2646L, configuration0.getId());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.onCreate();
      configuration0.getApplication();
      String string0 = "Q8fXS6VHER;Oaa6M+M";
      configuration0.containsUserWithUserIdentification("Q8fXS6VHER;Oaa6M+M");
      boolean boolean0 = false;
      Vector<ConfigurationMechanism> vector0 = new Vector<ConfigurationMechanism>();
      configuration0.setName("Q8fXS6VHER;Oaa6M+M");
      UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Integer, ConfigurationMechanism> function1 = (Function<Integer, ConfigurationMechanism>) mock(Function.class, new ViolatedAssumptionAnswer());
      Converter<ConfigurationMechanism, Integer> converter0 = Converter.from((Function<? super ConfigurationMechanism, ? extends Integer>) function0, (Function<? super Integer, ? extends ConfigurationMechanism>) function1);
      // Undeclared exception!
      try { 
        converter0.andThen((Converter<Integer, Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1), 0, (-1), (-1528), (-1528));
      MockDate mockDate1 = new MockDate((-1528));
      Vector<ConfigurationMechanism> vector0 = new Vector<ConfigurationMechanism>();
      TriggerType triggerType0 = TriggerType.PULL;
      Configuration configuration0 = new Configuration("bc", triggerType0, mockDate1, mockDate1, vector0, (Application) null);
      Mechanism mechanism0 = new Mechanism();
      ConfigurationMechanism configurationMechanism0 = new ConfigurationMechanism(configuration0, mechanism0, false, 0);
      vector0.add(configurationMechanism0);
      configuration0.setPullDefault(false);
      TriggerType triggerType1 = TriggerType.PULL;
      Vector<ConfigurationUserGroup> vector1 = new Vector<ConfigurationUserGroup>();
      Stack<Parameter> stack0 = new Stack<Parameter>();
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration("", mockDate0, mockDate0, stack0, (Application) null, configuration0);
      ArrayList<Mechanism> arrayList0 = new ArrayList<Mechanism>();
      Configuration configuration1 = new Configuration("bc", triggerType1, mockDate1, mockDate0, vector0, vector1, (Application) null, generalConfiguration0, arrayList0);
      configuration1.getId();
      String string0 = configuration1.toString();
      assertEquals("Configuration[id=0, name='bc', type='PULL', mechanisms='Mechanism[id=0, type='null', parameters=[]]']", string0);
      
      Configuration configuration2 = new Configuration();
      configuration2.getUserGroups();
      configuration0.getConfigurationMechanisms();
      configuration0.filterByLanguage("ff 14\"-kp[4)i7cJp", "8-+DBe'N~TS$#");
      assertFalse(configuration0.isPullDefault());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PULL;
      int int0 = 1073741824;
      MockDate mockDate0 = new MockDate(2, 2, 1073741824, 1, 0);
      Mechanism mechanism0 = new Mechanism();
      mechanism0.getConfigurationMechanisms();
      Stack<ConfigurationUserGroup> stack0 = new Stack<ConfigurationUserGroup>();
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration();
      Stack<Configuration> stack1 = new Stack<Configuration>();
      generalConfiguration0.parametersByLanguage("zX1z$)ee+n ,ip", (String) null);
      Application application0 = new Application("zX1z$)ee+n ,ip", 1073741824, mockDate0, mockDate0, generalConfiguration0, stack1, (List<User>) null);
      mechanism0.setConfigurationMechanisms((List<ConfigurationMechanism>) null);
      ArrayList<Mechanism> arrayList0 = new ArrayList<Mechanism>();
      ConfigurationUserGroup configurationUserGroup0 = new ConfigurationUserGroup();
      configurationUserGroup0.setCreatedAt(mockDate0);
      configurationUserGroup0.setId(450775L);
      stack0.add(configurationUserGroup0);
      Configuration configuration0 = new Configuration("a{v7cZUf+',ZuWgt", triggerType0, mockDate0, mockDate0, (List<ConfigurationMechanism>) null, stack0, application0, generalConfiguration0, true, true, arrayList0);
      configuration0.getMechanisms();
      arrayList0.trimToSize();
      configuration0.setCreatedAt(mockDate0);
      // Undeclared exception!
      try { 
        configuration0.containsUserWithUserIdentification("a{v7cZUf+',ZuWgt");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.onUpdate();
      assertEquals(0L, configuration0.getId());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      Vector<ConfigurationMechanism> vector0 = new Vector<ConfigurationMechanism>();
      configuration0.setConfigurationMechanisms(vector0);
      List<Mechanism> list0 = configuration0.getMechanisms();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      ArrayList<Mechanism> arrayList0 = new ArrayList<Mechanism>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.add("Configuration[id=%d, name='%s', type='%s', mechanisms='%s']");
      arrayList0.retainAll(arrayDeque0);
      configuration0.setMechanisms(arrayList0);
      String string0 = "GH)OwE=M*";
      String string1 = ".zYr";
      MockDate mockDate0 = null;
      try {
        mockDate0 = new MockDate("GH)OwE=M*");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.setPushDefault(true);
      configuration0.getId();
      assertTrue(configuration0.isPushDefault());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      ArrayList<UserGroup> arrayList0 = new ArrayList<UserGroup>();
      Vector<User> vector0 = new Vector<User>();
      UserGroup userGroup0 = new UserGroup("y|(2", vector0, (Application) null);
      arrayList0.add(userGroup0);
      configuration0.setUserGroups(arrayList0);
      TriggerType triggerType0 = TriggerType.PUSH;
      List<ConfigurationUserGroup> list0 = configuration0.getConfigurationUserGroups();
      configuration0.setConfigurationUserGroups(list0);
      configuration0.setType(triggerType0);
      configuration0.toString();
      configuration0.toString();
      configuration0.getMechanisms();
      configuration0.containsUserWithUserIdentification("");
      configuration0.getMechanisms();
      configuration0.setPushDefault(false);
      configuration0.onUpdate();
      configuration0.setPushDefault(false);
      configuration0.onUpdate();
      configuration0.getUserGroups();
      configuration0.setConfigurationUserGroups(list0);
      configuration0.setName("kc6:{");
      configuration0.getMechanisms();
      configuration0.toString();
      configuration0.getUserGroups();
      configuration0.isPullDefault();
      configuration0.getGeneralConfiguration();
      configuration0.getConfigurationMechanisms();
      configuration0.containsUserWithUserIdentification("");
      configuration0.containsUserGroupWithId(356L);
      configuration0.isPullDefault();
      configuration0.getGeneralConfiguration();
      System.setCurrentTimeMillis((-3641L));
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      boolean boolean0 = configuration0.isPullDefault();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      configuration0.toString();
      MockDate mockDate0 = new MockDate(9223372036854775807L);
      configuration0.setCreatedAt(mockDate0);
      configuration0.setCreatedAt(mockDate0);
      configuration0.onUpdate();
      configuration0.getCreatedAt();
      configuration0.onUpdate();
      configuration0.filterByLanguage("Configuration[id=0, name='null', type='null', mechanisms='']", "VHDb@i~nDT'j&m[i");
      configuration0.setId((-6180L));
      Stack<ConfigurationUserGroup> stack0 = new Stack<ConfigurationUserGroup>();
      configuration0.setConfigurationUserGroups(stack0);
      configuration0.getConfigurationUserGroups();
      configuration0.getConfigurationUserGroups();
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration();
      configuration0.getType();
      configuration0.isPushDefault();
      assertEquals((-6180L), configuration0.getId());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      TriggerType triggerType0 = TriggerType.PUSH;
      Stack<ConfigurationMechanism> stack0 = new Stack<ConfigurationMechanism>();
      MockDate mockDate0 = new MockDate((-334));
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration();
      Vector<Configuration> vector0 = new Vector<Configuration>(0);
      TriggerType triggerType1 = TriggerType.PUSH;
      MockDate mockDate1 = new MockDate();
      Application application0 = new Application("6<2P5u^", 0, mockDate0, mockDate1, vector0);
      Configuration configuration0 = new Configuration("6<2P5u^", triggerType1, mockDate0, mockDate0, stack0, application0);
      generalConfiguration0.setConfiguration(configuration0);
      Stack<User> stack1 = new Stack<User>();
      stack0.stream();
      Stack<UserGroup> stack2 = new Stack<UserGroup>();
      Vector<ApiUserPermission> vector1 = new Vector<ApiUserPermission>();
      Application application1 = new Application("6<2P5u^", (-334), mockDate0, mockDate0, generalConfiguration0, vector0, stack1, stack2, vector1);
      application0.filterByLanguage("com.google.common.collect.Multimaps$Keys", (String) null);
      Configuration configuration1 = new Configuration("6<2P5u^", triggerType0, stack0, application1);
      configuration1.getUpdatedAt();
      configuration0.setId(0);
      configuration1.setCreatedAt(mockDate0);
      assertFalse(vector0.contains(configuration1));
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      ArrayList<UserGroup> arrayList0 = new ArrayList<UserGroup>();
      configuration0.setUserGroups(arrayList0);
      configuration0.setUserGroups(arrayList0);
      assertFalse(configuration0.isPushDefault());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      Application application0 = new Application();
      configuration0.setApplication(application0);
      boolean boolean0 = configuration0.containsUserWithUserIdentification(".lowerCase()");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      Application application0 = configuration0.getApplication();
      assertNull(application0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      GeneralConfiguration generalConfiguration0 = new GeneralConfiguration();
      configuration0.setGeneralConfiguration(generalConfiguration0);
      List<UserGroup> list0 = configuration0.getUserGroups();
      assertEquals(0, list0.size());
  }
}
