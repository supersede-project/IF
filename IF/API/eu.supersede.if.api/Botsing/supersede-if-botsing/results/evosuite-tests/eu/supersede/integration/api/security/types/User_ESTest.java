/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 11:52:21 GMT 2019
 */

package eu.supersede.integration.api.security.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.security.types.Role;
import eu.supersede.integration.api.security.types.User;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.wso2.carbon.user.core.claim.Claim;

public class User_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getTelephone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      User user0 = new User();
      Claim claim0 = new Claim();
      claim0.setClaimUri("urn:scim:schemas:core:1.0:emails");
      Claim[] claimArray0 = new Claim[2];
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      User user0 = new User();
      Claim claim0 = new Claim();
      claim0.setClaimUri("urn:scim:schemas:core:1.0:name.familyName");
      Claim[] claimArray0 = new Claim[8];
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getCountry();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getAddress();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Claim claim0 = new Claim();
      claim0.setClaimUri("urn:scim:schemas:core:1.0:name.givenName");
      User user0 = new User();
      Claim[] claimArray0 = new Claim[1];
      claimArray0[0] = claim0;
      user0.readClaims(claimArray0);
      assertNull(user0.getTelephone());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      User user0 = new User();
      URL uRL0 = user0.getUrl();
      assertNull(uRL0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      User user0 = new User();
      user0.setIm("");
      String string0 = user0.getIm();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      User user0 = new User();
      user0.setTelephone("DX%c|C;rL}");
      String string0 = user0.getTelephone();
      assertEquals("DX%c|C;rL}", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      User user0 = new User();
      Map<String, String> map0 = user0.getClaims();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getOrganization();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      User user0 = new User();
      Set<Role> set0 = user0.getRoles();
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "/";
      stringArray0[1] = "profile";
      stringArray0[2] = "profile";
      // Undeclared exception!
      try { 
        User.users(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      User user0 = new User();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "#u%\"N)Wh";
      stringArray0[1] = "TuN[X`gXNCP!iAq4@";
      stringArray0[2] = "-mMc0YQraND7k@13";
      stringArray0[3] = "kg'#o.Dok;";
      Set<Role> set0 = Role.roles(stringArray0);
      user0.setRoles(set0);
      Set<Role> set1 = user0.getRoles();
      assertEquals(4, set1.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getMobile();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getFirstname();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getIm();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getLastname();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      User user0 = new User();
      URL uRL0 = MockURL.getFileExample();
      user0.setUrl(uRL0);
      Map<String, String> map0 = user0.getClaims();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Claim claim0 = new Claim();
      claim0.setClaimUri("http://wso2.org/claims/lastname");
      User user0 = new User();
      Claim[] claimArray0 = new Claim[5];
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Claim claim0 = new Claim();
      claim0.setClaimUri("http://axschema.org/namePerson/last");
      User user0 = new User();
      Claim[] claimArray0 = new Claim[1];
      claimArray0[0] = claim0;
      user0.readClaims(claimArray0);
      assertNull(user0.getLastname());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Claim claim0 = new Claim();
      claim0.setClaimUri("http://wso2.org/claims/im");
      User user0 = new User();
      Claim[] claimArray0 = new Claim[7];
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      User user0 = new User();
      Claim claim0 = new Claim();
      claim0.setClaimUri("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress");
      Claim[] claimArray0 = new Claim[2];
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      User user0 = new User();
      Claim claim0 = new Claim();
      claim0.setClaimUri("http://wso2.org/claims/telephone");
      Claim[] claimArray0 = new Claim[3];
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      User user0 = new User();
      Claim claim0 = new Claim();
      Claim[] claimArray0 = new Claim[8];
      claimArray0[0] = claim0;
      claim0.setClaimUri("urn:scim:schemas:core:1.0:addresses.country");
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      User user0 = new User();
      Claim claim0 = new Claim();
      claim0.setClaimUri("http://axschema.org/contact/country/home");
      Claim claim1 = new Claim();
      claim1.setClaimUri("org.apache.axis2.classloader.JarStreamHandlerFactory");
      Claim[] claimArray0 = new Claim[4];
      claimArray0[0] = claim1;
      claimArray0[1] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Claim claim0 = new Claim();
      claim0.setClaimUri("http://axschema.org/contact/email");
      User user0 = new User();
      Claim[] claimArray0 = new Claim[2];
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Claim claim0 = new Claim();
      User user0 = new User();
      Claim[] claimArray0 = new Claim[5];
      claimArray0[0] = claim0;
      claim0.setClaimUri("urn:scim:schemas:core:1.0:profileUrl");
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Claim claim0 = new Claim();
      User user0 = new User();
      claim0.setClaimUri("family_name");
      Claim[] claimArray0 = new Claim[5];
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      User user0 = new User();
      Claim claim0 = new Claim();
      claim0.setClaimUri("urn:scim:schemas:core:1.0:phoneNumbers.mobile");
      Claim[] claimArray0 = new Claim[8];
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Claim claim0 = new Claim();
      claim0.setClaimUri("http://wso2.org/claims/givenname");
      User user0 = new User();
      Claim[] claimArray0 = new Claim[1];
      claimArray0[0] = claim0;
      user0.readClaims(claimArray0);
      assertNull(user0.getFirstname());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Claim claim0 = new Claim();
      claim0.setClaimUri("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname");
      User user0 = new User();
      Claim[] claimArray0 = new Claim[2];
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Claim claim0 = new Claim();
      claim0.setClaimUri("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/country");
      User user0 = new User();
      Claim[] claimArray0 = new Claim[6];
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      User user0 = new User();
      Claim claim0 = new Claim();
      claim0.setClaimUri("phone_number");
      Claim[] claimArray0 = new Claim[8];
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Claim claim0 = new Claim();
      claim0.setClaimUri("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/streetaddress");
      User user0 = new User();
      Claim[] claimArray0 = new Claim[3];
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Claim claim0 = new Claim();
      claim0.setClaimUri("http://wso2.org/claims/streetaddress");
      User user0 = new User();
      Claim[] claimArray0 = new Claim[5];
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      User user0 = new User();
      Claim claim0 = new Claim();
      claim0.setClaimUri("profile");
      Claim[] claimArray0 = new Claim[5];
      claimArray0[0] = claim0;
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      User user0 = new User();
      Claim claim0 = new Claim();
      claim0.setClaimUri("urn:scim:schemas:core:1.0:addresses.streetAddress");
      Claim[] claimArray0 = new Claim[1];
      claimArray0[0] = claim0;
      user0.readClaims(claimArray0);
      assertNull(user0.getUserName());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      User user0 = new User();
      Claim claim0 = new Claim();
      claim0.setClaimUri("http://wso2.org/claims/country");
      Claim[] claimArray0 = new Claim[7];
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      User user0 = new User();
      Claim claim0 = new Claim();
      claim0.setClaimUri("email");
      Claim[] claimArray0 = new Claim[2];
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Claim claim0 = new Claim();
      User user0 = new User();
      claim0.setClaimUri("http://wso2.org/claims/mobile");
      Claim[] claimArray0 = new Claim[9];
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Claim claim0 = new Claim();
      claim0.setClaimUri("http://wso2.org/claims/organization");
      User user0 = new User();
      Claim[] claimArray0 = new Claim[1];
      claimArray0[0] = claim0;
      user0.readClaims(claimArray0);
      assertNull(user0.getLastname());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Claim claim0 = new Claim();
      claim0.setClaimUri("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname");
      User user0 = new User();
      Claim[] claimArray0 = new Claim[2];
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      User user0 = new User();
      Claim claim0 = new Claim();
      claim0.setClaimUri("http://wso2.org/claims/emailaddress");
      Claim[] claimArray0 = new Claim[9];
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Claim claim0 = new Claim();
      claim0.setClaimUri("urn:scim:schemas:core:1.0:ims");
      User user0 = new User();
      Claim[] claimArray0 = new Claim[1];
      claimArray0[0] = claim0;
      user0.readClaims(claimArray0);
      assertNull(user0.getAddress());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Claim claim0 = new Claim();
      User user0 = new User();
      claim0.setClaimUri("country");
      Claim[] claimArray0 = new Claim[1];
      claimArray0[0] = claim0;
      user0.readClaims(claimArray0);
      assertEquals(1, claimArray0.length);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      User user0 = new User();
      Claim claim0 = new Claim();
      claim0.setClaimUri("website");
      Claim[] claimArray0 = new Claim[3];
      claimArray0[0] = claim0;
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      User user0 = new User();
      Claim claim0 = new Claim();
      claim0.setClaimUri("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/mobile");
      Claim[] claimArray0 = new Claim[8];
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Set<User> set0 = User.users((String[]) null);
      String[] stringArray0 = User.userNames(set0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "J6q.Yxuh:ljf.'/";
      Set<User> set0 = User.users(stringArray0);
      String[] stringArray1 = User.userNames(set0);
      assertEquals(1, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Set<User> set0 = User.users((String[]) null);
      User user0 = new User();
      boolean boolean0 = user0.equals(set0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getUserName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      User user0 = new User();
      user0.setEmail("C~X+`MT!~dbFV4w9{");
      String string0 = user0.getEmail();
      assertEquals("C~X+`MT!~dbFV4w9{", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      User user0 = new User();
      user0.setFirstname(">qj=gN(LYZuKrxbS`7");
      String string0 = user0.getFirstname();
      assertEquals(">qj=gN(LYZuKrxbS`7", string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      User user0 = new User();
      // Undeclared exception!
      try { 
        user0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      User user0 = new User();
      user0.setLastname("");
      String string0 = user0.getLastname();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      User user0 = new User();
      // Undeclared exception!
      try { 
        user0.equals(user0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      User user0 = new User();
      // Undeclared exception!
      try { 
        user0.setUrl((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      // Undeclared exception!
      try { 
        User.userNames((Set<User>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      User user0 = new User();
      user0.setAddress("");
      String string0 = user0.getAddress();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      User user0 = new User();
      user0.setAddress("org.apache.axis2.classloader.JarFileUrlConnection");
      String string0 = user0.getAddress();
      assertEquals("org.apache.axis2.classloader.JarFileUrlConnection", string0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      User user0 = new User();
      user0.setCountry("");
      String string0 = user0.getCountry();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      User user0 = new User();
      user0.setCountry("AAF}/k,quiROcL!rd{P");
      String string0 = user0.getCountry();
      assertEquals("AAF}/k,quiROcL!rd{P", string0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      User user0 = new User();
      user0.setEmail("");
      String string0 = user0.getEmail();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      User user0 = new User();
      user0.setFirstname("");
      String string0 = user0.getFirstname();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      User user0 = new User();
      user0.setIm("h~RpP(5}");
      String string0 = user0.getIm();
      assertEquals("h~RpP(5}", string0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      User user0 = new User();
      user0.setLastname("CharMatcher.inRange('");
      String string0 = user0.getLastname();
      assertEquals("CharMatcher.inRange('", string0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      User user0 = new User();
      user0.setMobile("");
      String string0 = user0.getMobile();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      User user0 = new User();
      user0.setMobile("urn:scim:schemas:core:1.0:name.givenName");
      String string0 = user0.getMobile();
      assertEquals("urn:scim:schemas:core:1.0:name.givenName", string0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      User user0 = new User();
      user0.setOrganization("");
      String string0 = user0.getOrganization();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      User user0 = new User();
      user0.setOrganization("CTH7{ek6@");
      String string0 = user0.getOrganization();
      assertEquals("CTH7{ek6@", string0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      User user0 = new User();
      user0.setRoles((Set<Role>) null);
      Set<Role> set0 = user0.getRoles();
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      User user0 = new User();
      user0.setTelephone("");
      String string0 = user0.getTelephone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      User user0 = new User();
      URL uRL0 = MockURL.getFileExample();
      user0.setUrl(uRL0);
      URL uRL1 = user0.getUrl();
      assertNull(uRL1.getUserInfo());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      User user0 = new User();
      user0.setUserName("");
      String string0 = user0.getUserName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      User user0 = new User();
      user0.setUserName("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname");
      String string0 = user0.getUserName();
      assertEquals("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname", string0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Claim claim0 = new Claim();
      User user0 = new User();
      claim0.setClaimUri("http://wso2.org/claims/url");
      Claim[] claimArray0 = new Claim[4];
      claim0.setValue("http://wso2.org/claims/url");
      claimArray0[0] = claim0;
      // Undeclared exception!
      try { 
        user0.readClaims(claimArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      User user0 = new User();
      user0.setUserName("kng/U*RSukJ\"(#~N3`");
      user0.hashCode();
  }
}
