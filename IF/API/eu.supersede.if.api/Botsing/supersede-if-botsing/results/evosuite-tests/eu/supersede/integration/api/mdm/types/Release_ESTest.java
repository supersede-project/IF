/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 11:10:15 GMT 2019
 */

package eu.supersede.integration.api.mdm.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.mdm.types.Release;

public class Release_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Release release0 = new Release();
      String string0 = release0.getReleaseID();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Release release0 = new Release();
      release0.setGraph("ZsSzbKflb@C");
      assertNull(release0.getJsonInstances());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Release release0 = new Release();
      String string0 = release0.getJsonInstances();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Release release0 = new Release();
      String string0 = release0.getEvent();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Release release0 = new Release();
      String string0 = release0.getPlatform();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Release release0 = new Release();
      release0.setEvent("");
      String string0 = release0.getEvent();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Release release0 = new Release();
      String string0 = release0.getKafkaTopic();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Release release0 = new Release();
      String string0 = release0.getSchemaVersion();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Release release0 = new Release();
      release0.setSchemaVersion("");
      String string0 = release0.getSchemaVersion();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Release release0 = new Release();
      boolean boolean0 = release0.isDispatch();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Release release0 = new Release();
      release0.setPlatform("");
      String string0 = release0.getPlatform();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Release release0 = new Release();
      String string0 = release0.getGraph();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Release release0 = new Release();
      String string0 = release0.getDispatcherPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Release release0 = new Release();
      release0.setJsonInstances("");
      String string0 = release0.getJsonInstances();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Release release0 = new Release();
      release0.setDispatcherPath("");
      String string0 = release0.getDispatcherPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Release release0 = new Release();
      release0.setDispatcherPath(">,5A");
      String string0 = release0.getDispatcherPath();
      assertEquals(">,5A", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Release release0 = new Release();
      release0.setEvent("eu.supersede.integration.api.mdm.types.Release");
      String string0 = release0.getEvent();
      assertEquals("eu.supersede.integration.api.mdm.types.Release", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Release release0 = new Release();
      release0.graph = "";
      String string0 = release0.getGraph();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Release release0 = new Release();
      release0.graph = "eu.supersede.integration.api.mdm.types.Release";
      String string0 = release0.getGraph();
      assertEquals("eu.supersede.integration.api.mdm.types.Release", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Release release0 = new Release();
      release0.setJsonInstances("gG^Mtq");
      String string0 = release0.getJsonInstances();
      assertEquals("gG^Mtq", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Release release0 = new Release();
      release0.setKafkaTopic("");
      String string0 = release0.getKafkaTopic();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Release release0 = new Release();
      release0.kafkaTopic = "kC";
      String string0 = release0.getKafkaTopic();
      assertEquals("kC", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Release release0 = new Release();
      release0.setPlatform("{1wynW2jR");
      String string0 = release0.getPlatform();
      assertEquals("{1wynW2jR", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Release release0 = new Release();
      release0.setReleaseID("");
      String string0 = release0.getReleaseID();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Release release0 = new Release();
      release0.setReleaseID("ZsSzbKflb@C");
      String string0 = release0.getReleaseID();
      assertEquals("ZsSzbKflb@C", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Release release0 = new Release();
      release0.setSchemaVersion("_PdI*9E1(a&ju");
      String string0 = release0.getSchemaVersion();
      assertEquals("_PdI*9E1(a&ju", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Release release0 = new Release();
      release0.setDispatch(true);
      boolean boolean0 = release0.isDispatch();
      assertTrue(boolean0);
  }
}
