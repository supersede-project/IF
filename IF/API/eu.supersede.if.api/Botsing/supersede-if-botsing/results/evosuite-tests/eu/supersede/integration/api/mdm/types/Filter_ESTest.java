/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 11:07:26 GMT 2019
 */

package eu.supersede.integration.api.mdm.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.mdm.types.Event;
import eu.supersede.integration.api.mdm.types.Filter;

public class Filter_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Filter filter0 = new Filter();
      filter0.setLeftOperand("8l}oB(y!l*/[X:R");
      String string0 = filter0.getLeftOperand();
      assertEquals("8l}oB(y!l*/[X:R", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Filter filter0 = new Filter();
      String string0 = filter0.getComparator();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Filter filter0 = new Filter();
      String string0 = filter0.getRightOperand();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Filter filter0 = new Filter();
      String string0 = filter0.getLeftOperand();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Filter filter0 = new Filter();
      filter0.setRightOperand("");
      String string0 = filter0.getRightOperand();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Filter filter0 = new Filter();
      filter0.setComparator("");
      String string0 = filter0.getComparator();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Filter filter0 = new Filter();
      Event event0 = filter0.getEvent();
      assertNull(event0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Filter filter0 = new Filter();
      filter0.setComparator("?rAC/6$!m/Fm.zw(e");
      String string0 = filter0.getComparator();
      assertEquals("?rAC/6$!m/Fm.zw(e", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Filter filter0 = new Filter();
      Event event0 = new Event();
      filter0.setEvent(event0);
      Event event1 = filter0.getEvent();
      assertNull(event1.getDispatcherPath());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Filter filter0 = new Filter();
      filter0.setLeftOperand("");
      String string0 = filter0.getLeftOperand();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Filter filter0 = new Filter();
      filter0.setRightOperand("pr");
      String string0 = filter0.getRightOperand();
      assertEquals("pr", string0);
  }
}
