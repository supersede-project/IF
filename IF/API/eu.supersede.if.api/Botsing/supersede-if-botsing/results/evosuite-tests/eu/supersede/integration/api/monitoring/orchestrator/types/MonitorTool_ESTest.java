/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 11:19:30 GMT 2019
 */

package eu.supersede.integration.api.monitoring.orchestrator.types;

import org.junit.Test;
import static org.junit.Assert.*;
import eu.supersede.integration.api.monitoring.orchestrator.types.MonitorConfiguration;
import eu.supersede.integration.api.monitoring.orchestrator.types.MonitorTool;
import java.util.ArrayList;
import java.util.List;
import java.util.Stack;

public class MonitorTool_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      Integer integer0 = monitorTool0.getId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      String string0 = monitorTool0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      List<MonitorConfiguration> list0 = monitorTool0.getMonitorConfigurations();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      monitorTool0.setMonitorName("aM3S");
      String string0 = monitorTool0.getMonitorName();
      assertEquals("aM3S", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      Integer integer0 = new Integer(8232);
      monitorTool0.setId(integer0);
      Integer integer1 = monitorTool0.getId();
      assertEquals(8232, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      Integer integer0 = monitorTool0.getMonitorTypeId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      String string0 = monitorTool0.getMonitorName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      Integer integer0 = new Integer((-1));
      monitorTool0.setId(integer0);
      Integer integer1 = monitorTool0.getId();
      assertEquals((-1), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      Integer integer0 = new Integer(0);
      monitorTool0.setId(integer0);
      Integer integer1 = monitorTool0.getId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      Stack<MonitorConfiguration> stack0 = new Stack<MonitorConfiguration>();
      monitorTool0.monitorConfigurations = (List<MonitorConfiguration>) stack0;
      MonitorConfiguration monitorConfiguration0 = new MonitorConfiguration();
      stack0.add(monitorConfiguration0);
      List<MonitorConfiguration> list0 = monitorTool0.getMonitorConfigurations();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      ArrayList<MonitorConfiguration> arrayList0 = new ArrayList<MonitorConfiguration>();
      monitorTool0.setMonitorConfigurations(arrayList0);
      List<MonitorConfiguration> list0 = monitorTool0.getMonitorConfigurations();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      monitorTool0.setMonitorName("");
      String string0 = monitorTool0.getMonitorName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      Integer integer0 = new Integer((-3823));
      monitorTool0.setMonitorTypeId(integer0);
      Integer integer1 = monitorTool0.getMonitorTypeId();
      assertEquals((-3823), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      Integer integer0 = new Integer(655);
      monitorTool0.setMonitorTypeId(integer0);
      Integer integer1 = monitorTool0.getMonitorTypeId();
      assertEquals(655, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      Integer integer0 = new Integer(0);
      monitorTool0.setMonitorTypeId(integer0);
      Integer integer1 = monitorTool0.getMonitorTypeId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      monitorTool0.setName("");
      String string0 = monitorTool0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MonitorTool monitorTool0 = new MonitorTool();
      monitorTool0.setName("com.google.common.collect.ImmutableMap");
      String string0 = monitorTool0.getName();
      assertEquals("com.google.common.collect.ImmutableMap", string0);
  }
}
