<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0" /></state><state id="s4"><transition target="s5" action="com.fasterxml.jackson.core.JsonParser.substring(int,int)" proba="1.0" /></state><state id="s5"><transition target="s6" action="com.fasterxml.jackson.core.JsonParser.equals(java.lang.Object)" proba="1.0" /></state><state id="s6"><transition target="s7" action="com.fasterxml.jackson.core.JsonParser.getValueAsString()" proba="1.0" /></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0" /></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0" /></state><state id="s0"><transition target="s1" action="com.fasterxml.jackson.core.JsonParser.getText()" proba="0.75" /><transition target="s2" action="com.fasterxml.jackson.core.JsonParser.getCodec()" proba="0.25" /></state><state id="s1"><transition target="s4" action="com.fasterxml.jackson.core.JsonParser.trim()" proba="0.25" /><transition target="sX" action="epsilon" proba="0.5" /><transition target="s1" action="com.fasterxml.jackson.core.JsonParser.getText()" proba="0.25" /></state><state id="s2"><transition target="s3" action="com.fasterxml.jackson.core.JsonParser.readTree(com.fasterxml.jackson.core.JsonParser)" proba="1.0" /></state></states></ts>